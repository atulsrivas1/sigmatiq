-- AUTO-GENERATED seed for sc.strategies & sc.strategy_indicator_sets
BEGIN;
INSERT INTO sc.strategies (strategy_id, version, status, title, objective, tags, entry_logic, exit_logic, filters, risk, execution_policy, pre_reqs, performance_snapshot, caveats, compliance_note, how_to_evaluate, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('breakout_pullback_entry', 1, 'published', 'Breakout Pullback Entry', 'Enter on first pullback after a confirmed breakout with volume.', ARRAY[]::text[], '"close > donchian_high and vol_z > 2 then enter on pullback to ema20 or vwap"'::jsonb, '"target: prior high + ATR, stop: pullback swing low"'::jsonb, NULL, '{"position_sizing": "fixed_fraction", "stops_targets": "ATR(14) x1.0/1.5"}'::jsonb, '{"order_types": ["limit"], "hours": "RTH", "slippage_model": "bps:1.0"}'::jsonb, '{"indicator_sets_used": ["breakout_pullback_v1"]}'::jsonb, '{"winrate_range": "45–55%", "dd_range": "5–12%"}'::jsonb, '"False breakouts in chop; require volume confirmation."'::jsonb, NULL, NULL, TRUE, 'Buy the first clean pullback after a real breakout, with volume.', '{"operation": "backtest", "timeframe": "5m"}'::jsonb, '{"max_positions": 2, "max_daily_trades": 8, "loss_cap_bps": 75}'::jsonb) ON CONFLICT (strategy_id, version) DO NOTHING;
INSERT INTO sc.strategy_indicator_sets (strategy_id, strategy_version, set_id, set_version) VALUES ('breakout_pullback_entry', 1, 'breakout_pullback_v1', 1) ON CONFLICT DO NOTHING;
INSERT INTO sc.strategies (strategy_id, version, status, title, objective, tags, entry_logic, exit_logic, filters, risk, execution_policy, pre_reqs, performance_snapshot, caveats, compliance_note, how_to_evaluate, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('mean_reversion_bands', 1, 'published', 'Mean Reversion at Bands', 'Fade extremes at Bollinger bands with oscillator confirmation.', ARRAY[]::text[], '"(close <= bb_lower_20 AND rsi<30 AND stoch_rsi up) OR (close >= bb_upper_20 AND rsi>70 AND stoch_rsi down)"'::jsonb, '"target: mid-band; stop: beyond band by ATR"'::jsonb, NULL, '{"position_sizing": "fixed_fraction", "stops_targets": "ATR(14) x1.0"}'::jsonb, '{"order_types": ["limit"], "hours": "RTH", "slippage_model": "bps:1.0"}'::jsonb, '{"indicator_sets_used": ["mean_reversion_bands_v1"]}'::jsonb, '{"winrate_range": "45–55%", "dd_range": "6–12%"}'::jsonb, '"Strong trends can overrun reversions; require oscillator turn."'::jsonb, NULL, NULL, TRUE, 'Fade band extremes only when RSI/StochRSI turn; take profits at mid-band.', '{"operation": "backtest", "timeframe": "hourly"}'::jsonb, '{"max_positions": 2, "max_daily_trades": 6, "loss_cap_bps": 75}'::jsonb) ON CONFLICT (strategy_id, version) DO NOTHING;
INSERT INTO sc.strategy_indicator_sets (strategy_id, strategy_version, set_id, set_version) VALUES ('mean_reversion_bands', 1, 'mean_reversion_bands_v1', 1) ON CONFLICT DO NOTHING;
INSERT INTO sc.strategies (strategy_id, version, status, title, objective, tags, entry_logic, exit_logic, filters, risk, execution_policy, pre_reqs, performance_snapshot, caveats, compliance_note, how_to_evaluate, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('options_premium_selector', 1, 'published', 'Options Premium Selector', 'Choose premium selling vs buying contexts using IV rank and term slope.', ARRAY[]::text[], '"if iv_rank>0.7 and term_slope>0 => sell; if iv_rank<0.3 and term_slope<0 and momentum up => buy"'::jsonb, '"policy-defined for chosen structure (notional)"'::jsonb, NULL, '{"position_sizing": "notional_caps", "stops_targets": "structure-specific", "exposure_caps": "per underlying"}'::jsonb, '{"hours": "RTH", "liquidity_rules": "min OI/volume"}'::jsonb, '{"indicator_sets_used": ["options_premium_selector_v1"]}'::jsonb, '{"winrate_range": "contextual", "dd_range": "contextual"}'::jsonb, '"Earnings and event risk can flip IV regimes; require liquidity filters."'::jsonb, NULL, NULL, TRUE, 'High IV usually favors selling premium; low IV can favor buying if trend helps.', '{"operation": "backtest", "timeframe": "daily"}'::jsonb, '{"max_positions": 3, "max_daily_trades": 5, "loss_cap_bps": 75}'::jsonb) ON CONFLICT (strategy_id, version) DO NOTHING;
INSERT INTO sc.strategy_indicator_sets (strategy_id, strategy_version, set_id, set_version) VALUES ('options_premium_selector', 1, 'options_premium_selector_v1', 1) ON CONFLICT DO NOTHING;
INSERT INTO sc.strategies (strategy_id, version, status, title, objective, tags, entry_logic, exit_logic, filters, risk, execution_policy, pre_reqs, performance_snapshot, caveats, compliance_note, how_to_evaluate, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('trend_follow_alignment', 1, 'published', 'Trend Follow with HTF Alignment', 'Trade in the direction of the daily trend when hourly aligns.', ARRAY[]::text[], '"daily_ema up AND hourly close > ema20 AND ema_slope > 0"'::jsonb, '"trail stop via ATR; exit on EMA cross down or target"'::jsonb, NULL, '{"position_sizing": "vol_scaled", "stops_targets": "ATR(14) x1.0/2.0"}'::jsonb, '{"order_types": ["limit"], "hours": "RTH", "slippage_model": "bps:1.0"}'::jsonb, '{"indicator_sets_used": ["multi_tf_trend_v1"]}'::jsonb, '{"sharpe_range": "1.0–1.5 typical", "dd_range": "8–15%"}'::jsonb, '"Late reversals after long trends; watch for HTF shifts."'::jsonb, NULL, NULL, TRUE, 'Go with the daily trend only when the hourly agrees.', '{"operation": "backtest", "timeframe": "hourly"}'::jsonb, '{"max_positions": 3, "max_daily_trades": 6, "loss_cap_bps": 75}'::jsonb) ON CONFLICT (strategy_id, version) DO NOTHING;
INSERT INTO sc.strategy_indicator_sets (strategy_id, strategy_version, set_id, set_version) VALUES ('trend_follow_alignment', 1, 'multi_tf_trend_v1', 1) ON CONFLICT DO NOTHING;
INSERT INTO sc.strategies (strategy_id, version, status, title, objective, tags, entry_logic, exit_logic, filters, risk, execution_policy, pre_reqs, performance_snapshot, caveats, compliance_note, how_to_evaluate, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('vwap_reversion_intraday', 1, 'published', 'VWAP Reversion (Intraday)', 'Fade stretched moves back to VWAP on intraday timeframes.', ARRAY[]::text[], '"abs(price - vwap) / vwap > 0.005 and session_liquidity_ok"'::jsonb, '"reversion_to_vwap or time_stop 10m"'::jsonb, NULL, '{"position_sizing": "fixed_risk", "stops_targets": "ATR(14) x1.0", "daily_loss_limit": "-2%"}'::jsonb, '{"slippage_model": "bps:1.0", "order_types": ["limit"], "hours": "RTH"}'::jsonb, '{"datasets": ["intraday bars"], "indicator_sets_used": ["vwap_distance_obv_v1"]}'::jsonb, '{"sharpe_range": "0.8–1.2 typical", "dd_range": "5–12%"}'::jsonb, '"Choppy sessions and halts can degrade performance."'::jsonb, '"For education only; not investment advice."'::jsonb, NULL, TRUE, 'Fade stretched intraday moves back to VWAP with tight risk controls.', '{"operation": "backtest", "timeframe": "1m"}'::jsonb, '{"max_positions": 1, "max_daily_trades": 5, "loss_cap_bps": 50}'::jsonb) ON CONFLICT (strategy_id, version) DO NOTHING;
INSERT INTO sc.strategy_indicator_sets (strategy_id, strategy_version, set_id, set_version) VALUES ('vwap_reversion_intraday', 1, 'vwap_distance_obv_v1', 1) ON CONFLICT DO NOTHING;
COMMIT;
