-- AUTO-GENERATED seed for sc.indicators
BEGIN;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('adx', 1, 'published', 'Adx', NULL, 'trend_strength', 'dmi_adx', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 14}]'::jsonb, '{"what_it_measures": "Adx derived from market data.", "how_to_read": "> 25 often indicates a meaningful trend; < 20 weak/no trend.", "typical_ranges": "0–50 common; >50 rare strong trends.", "caveats": "ADX rises in both up and down trends; pair with direction filter."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Filtering for strong-trend environments"], "avoid_when": ["Micro timeframes with noise"], "example_conditions": ["adx(period=14) > 25"], "step_by_step": ["Pick period", "Filter setups only when ADX above threshold"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["ADX measures strength, not direction — combine with trend filter (e.g., EMA).", "Common threshold ~25 for ‘trend on’; adjust by timeframe.", "Avoid micro timeframes where noise inflates readings.", "Use to gate strategies rather than time entries."]'::jsonb, TRUE, 'Average Directional Index — strength of a trend (not its direction).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('aroon', 1, 'published', 'Aroon', NULL, 'price', 'trend', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 25}]'::jsonb, '{"what_it_measures": "Aroon derived from market data.", "how_to_read": "Aroon Up near 100% and Aroon Down low suggests uptrend; inverse suggests downtrend.", "typical_ranges": "Lookback 14–25 typical.", "caveats": "Can lag and whipsaw; use with trend filters."}'::jsonb, '{"inputs": ["high", "low"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Detecting emerging trends after consolidation"], "avoid_when": ["Very choppy markets"], "example_conditions": ["aroon(period=14).up > 70 and .down < 30"], "step_by_step": ["Pick window", "Alert when lines diverge strongly"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Look for strong up/down divergence after consolidation.", "Confirm with price/EMA to avoid whipsaws.", "Use as context for trend onset, not precise entries.", "Longer windows reduce noise but delay signals."]'::jsonb, TRUE, 'Aroon Up/Down — time since recent highs/lows to gauge trend changes.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('atm_iv_eod', 1, 'published', 'Atm Iv Eod', NULL, 'options_volatility', 'eod', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "sampling", "type": "<class ''str''>", "default": "15:55-16:00"}, {"name": "strike_band", "type": "<class ''float''>", "default": 5.0}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('atm_iv_open_delta', 1, 'published', 'Atm Iv Open Delta', NULL, 'options_volatility', 'iv_open', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "open_sampling", "type": "<class ''str''>", "default": "09:30-09:35"}, {"name": "close_sampling_prev", "type": "<class ''str''>", "default": "15:55-16:00"}, {"name": "strike_band", "type": "<class ''float''>", "default": 5.0}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('atm_iv_zscore', 1, 'published', 'Atm Iv Zscore', NULL, 'options_volatility', 'iv_zscore', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window_days", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Atm Iv Zscore derived from market data.", "how_to_read": "> 2.0 unusually high IV; < -2.0 unusually low.", "typical_ranges": "Window 20 common; Z 2–3 marks extremes.", "caveats": "Dependent on ATM measure and sampling window."}'::jsonb, '{"inputs": ["ATM IV time series"], "timeframe": "daily", "lookback": 20}'::jsonb, '{"best_when": ["Event risk and premium selection"], "avoid_when": ["Noisy/missing IV"], "example_conditions": ["atm_iv_zscore(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use consistent ATM definition and window for comparability.", "Z > 2 marks extremes; confirm with regime and events.", "Avoid mixing venues/sources; data differences can mislead.", "Treat as context for premium decisions, not timing alone."]'::jsonb, TRUE, 'ATM IV z‑score — how unusual today’s implied vol is vs recent history.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('atr', 1, 'published', 'Atr', NULL, 'volatility', 'atr', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 14}]'::jsonb, '{"what_it_measures": "Average True Range — recent volatility of price moves.", "how_to_read": "Higher ATR means larger typical bar ranges. Use multiples to size stops/targets.", "typical_ranges": "Ticker‑dependent. Compare to own history (percentile).", "caveats": "ATR expands in volatile periods; absolute values aren’t comparable across symbols."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Setting dynamic stops/targets", "Volatility regime detection"], "avoid_when": ["Comparing cross‑ticker absolute values"], "example_conditions": ["atr(period=14) > pctile(80)"], "step_by_step": ["Pick timeframe", "Compute ATR", "Use x1.5–2.0 multiples for stop/target"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "high"}'::jsonb, '["Size stops/targets in ATR multiples (e.g., 1x/2x).", "Compare ATR to own history (percentile) for regime context.", "Avoid comparing absolute ATR across tickers; normalize if needed.", "Expect expansion around events; reduce size accordingly."]'::jsonb, TRUE, 'Average True Range — magnitude of price movement (volatility).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('bollinger_bands', 1, 'published', 'Bollinger Bands', NULL, 'band', 'bollinger', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 20}, {"name": "num_std", "type": "<class ''float''>", "default": 2.0}]'::jsonb, '{"what_it_measures": "Moving average with upper/lower bands at N standard deviations.", "how_to_read": "Touches near upper band suggest overextension; lower band suggests oversold. Band width reflects volatility.", "typical_ranges": "20‑period, 2.0 std is a common default.", "caveats": "Bands expand/contract with volatility; touches are frequent in trends."}'::jsonb, '{"inputs": ["close"], "timeframe": "15m | hourly | daily", "lookback": 20}'::jsonb, '{"best_when": ["Range‑bound markets", "Fade extremes back to mid"], "avoid_when": ["Strong trends without mean reversion"], "example_conditions": ["close <= bb_lower_20", "close crosses above bb_mid_20"], "step_by_step": ["Pick window (20)", "Use 2.0 std", "Alert on touch + exit near mid"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Wait for confirmation (rejection/close) at bands; don’t auto‑fade.", "Target mid‑band for partial exits to reduce whipsaws.", "Avoid fading during strong trends; use a trend filter.", "Adjust std/window by timeframe and volatility."]'::jsonb, TRUE, 'Bands around a moving average to spot relative extremes.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('calendar_flags', 1, 'published', 'Calendar Flags', NULL, 'time', 'calendar', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "tz", "type": "<class ''str''>", "default": "US/Eastern"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('cci', 1, 'published', 'Cci', NULL, 'oscillator', 'cci', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Cci derived from market data.", "how_to_read": "> +100 overbought; < -100 oversold.", "typical_ranges": "Period 20 typical; thresholds ±100.", "caveats": "Sensitive to volatility; consider smoothing."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Range‑bound markets"], "avoid_when": ["High-volatility spikes"], "example_conditions": ["cci(period=20) < -100"], "step_by_step": ["Pick period", "Screen for extremes"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Prefer crosses back through ±100 over static levels.", "Consider smoothing or longer windows to reduce noise.", "Combine with trend filter to avoid fading strong moves.", "Normalize risk with ATR when trading extremes."]'::jsonb, TRUE, 'Commodity Channel Index — deviation from moving average (oscillator).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('close_vs_vwap', 1, 'published', 'Close Vs Vwap', NULL, 'intraday', 'vwap', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "kind", "type": "<class ''str''>", "default": "intraday"}]'::jsonb, '{"what_it_measures": "Distance of close from VWAP.", "how_to_read": "Positive = above VWAP; negative = below; larger magnitude = more stretched.", "typical_ranges": "Ticker/session dependent; use % of VWAP.", "caveats": "Resets each session; don’t compare across days directly."}'::jsonb, '{"inputs": ["price", "volume"], "timeframe": "1m | 5m", "lookback": null}'::jsonb, '{"best_when": ["Intraday mean reversion"], "avoid_when": ["Illiquid or erratic open"], "example_conditions": ["close_vs_vwap(kind=''pct'') < -0.5%"], "step_by_step": ["Compute VWAP intraday", "Alert on % deviation"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Set distance bounds to avoid chasing stretched moves.", "VWAP resets daily; evaluate within the same session.", "Avoid first 5–15 minutes if prints are erratic.", "Combine with volume/OBV for better signal quality."]'::jsonb, TRUE, 'Distance of price from VWAP — intraday stretch.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('cmf', 1, 'published', 'Cmf', NULL, 'volume', 'money_flow', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Chaikin Money Flow — volume-weighted accumulation/distribution.", "how_to_read": "> 0 suggests buying pressure; < 0 selling pressure.", "typical_ranges": "Period 20 common.", "caveats": "Relies on accurate volume; can be noisy intraday."}'::jsonb, '{"inputs": ["high", "low", "close", "volume"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Confirming trend strength"], "avoid_when": ["Illiquid tickers"], "example_conditions": ["cmf(period=20) > 0"], "step_by_step": ["Pick period", "Use sign/slope as confirmation"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Volume quality matters — filter illiquid names.", "Use CMF sign/slope as confirmation, not a trigger.", "Pair with price trend or OBV for robustness.", "Smooth on low timeframes to reduce whipsaws."]'::jsonb, TRUE, 'Chaikin Money Flow — accumulation/distribution using price and volume.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('daily_dist_to_ema', 1, 'published', 'Daily Dist To Ema', NULL, 'daily_moving_average', 'distance', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window", "type": "<class ''int''>", "default": 20}, {"name": "normalize", "type": "<class ''str''>", "default": "price"}]'::jsonb, '{"what_it_measures": "Daily Dist To Ema derived from market data.", "how_to_read": "Positive = above EMA; negative = below; magnitude shows stretch.", "typical_ranges": "Normalize by ATR or z-score for comparability.", "caveats": "Absolute distances vary by ticker volatility."}'::jsonb, '{"inputs": ["daily close"], "timeframe": "daily", "lookback": 20}'::jsonb, '{"best_when": ["Avoiding extended entries", "Mean-reversion filters"], "avoid_when": ["Noisy low-volume names"], "example_conditions": ["daily_dist_to_ema(underlying=''SPY'', window=20, normalize=true) > 1.5σ"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Normalize by ATR or z-score for cross-ticker comparability.", "Use as a stretch filter; avoid as a direct entry trigger.", "Combine with daily trend (EMA) and catalyst context.", "Beware regime shifts where ‘normal’ stretch changes."]'::jsonb, TRUE, 'Distance of price from daily EMA — stretch from trend.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('daily_ema', 1, 'published', 'Daily Ema', NULL, 'daily_moving_average', 'ema', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Smoothed average of daily closes to reveal trend.", "how_to_read": "Price above daily EMA suggests bullish bias; below suggests bearish bias.", "typical_ranges": "20/50 commonly used.", "caveats": "Lagging; intraday moves can diverge from daily."}'::jsonb, '{"inputs": ["daily close"], "timeframe": "daily", "lookback": 20}'::jsonb, '{"best_when": ["Aligning intraday trades with daily trend"], "avoid_when": ["Counter-trend scalps"], "example_conditions": ["daily_ema(underlying=''SPY'', window=20)"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use daily EMA as bias; not a precise trigger.", "Require intraday alignment (e.g., hourly EMA) before entries.", "Re‑evaluate bias when price decisively crosses daily EMA.", "Beware of whipsaws around the EMA in sideways markets."]'::jsonb, TRUE, 'Daily EMA — higher timeframe trend filter.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('daily_ret', 1, 'published', 'Daily Ret', NULL, 'daily_momentum', 'returns', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window", "type": "<class ''int''>", "default": 1}]'::jsonb, '{"what_it_measures": "Daily Ret derived from market data.", "how_to_read": "Positive cumulative return indicates uptrend over the window.", "typical_ranges": "Depends on window and ticker volatility.", "caveats": "Sensitive to window choice; consider normalization."}'::jsonb, '{"inputs": ["daily close"], "timeframe": "daily", "lookback": 20}'::jsonb, '{"best_when": ["Bias filter for swing entries"], "avoid_when": ["Very short horizon decisions"], "example_conditions": ["daily_ret(underlying=''SPY'', window=20) > 0"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Choose window to match horizon (e.g., 20d for swings).", "Use as bias/context; not a precise entry signal.", "Normalize or compare to volatility for robustness.", "Re-evaluate after significant gaps or events."]'::jsonb, TRUE, 'Daily returns over a window — momentum context for swings.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('daily_rsi', 1, 'published', 'Daily Rsi', NULL, 'daily_momentum', 'rsi', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "period", "type": "<class ''int''>", "default": 14}, {"name": "column", "type": "<class ''str''>", "default": "close"}]'::jsonb, '{"what_it_measures": "Daily Rsi derived from market data.", "how_to_read": "> 70 overbought; < 30 oversold on daily charts.", "typical_ranges": "Period 14 default.", "caveats": "Extremes can persist in strong trends."}'::jsonb, '{"inputs": ["daily close"], "timeframe": "daily", "lookback": 14}'::jsonb, '{"best_when": ["Swing filters and scans"], "avoid_when": ["Earnings or news spikes"], "example_conditions": ["daily_rsi(underlying=''SPY'', period=14) < 30"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Favor crosses back through 30/70 over static extremes.", "Combine with trend filters (e.g., daily EMA) for context.", "Extremes can persist — scale entries, don’t assume immediate mean reversion.", "Beware event risk that distorts daily momentum."]'::jsonb, TRUE, 'Daily RSI — momentum view on the daily timeframe.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('daily_vwap', 1, 'published', 'Daily Vwap', NULL, 'daily_volume', 'vwap', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "shift_days", "type": "<class ''int''>", "default": 1}]'::jsonb, '{"what_it_measures": "Daily Vwap derived from market data.", "how_to_read": "Price above daily VWAP suggests buyer control; below suggests seller control.", "typical_ranges": "N/A — VWAP is a reference curve per session.", "caveats": "Resets each day; intraday VWAP differs from prior day VWAP."}'::jsonb, '{"inputs": ["daily price", "daily volume"], "timeframe": "daily", "lookback": null}'::jsonb, '{"best_when": ["Context for intraday entries"], "avoid_when": ["Comparing across sessions without context"], "example_conditions": ["close crosses above daily_vwap(underlying=''SPY'')"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Treat daily VWAP as a bias/reference, not a trigger.", "Mind overnight gaps; prior-day VWAP may be far from open.", "Pair with intraday VWAP and EMA for entries.", "Avoid illiquid days where VWAP is unstable."]'::jsonb, TRUE, 'Daily VWAP — session average price reference.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('day_range_pos', 1, 'published', 'Day Range Pos', NULL, 'intraday', 'session_range', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "args", "type": "any"}, {"name": "kwargs", "type": "any"}]'::jsonb, '{"what_it_measures": "Day Range Pos derived from market data.", "how_to_read": "0 = session low, 1 = session high; 0.5 = mid.", "typical_ranges": "Resets daily; interpret relative to 0.5.", "caveats": "Can bounce around mid in chop."}'::jsonb, '{"inputs": ["intraday high", "intraday low", "close"], "timeframe": "1m | 5m", "lookback": null}'::jsonb, '{"best_when": ["Context for timing entries"], "avoid_when": ["Tight ranges"], "example_conditions": ["day_range_pos() < 0.2 for bargain hunting"], "step_by_step": ["Compute today’s high/low", "Map close to [0,1]"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Avoid early minutes; range not established yet.", "Use with volume/volatility context to avoid chop traps.", "High values near 1.0 often imply momentum continuation risk for fades.", "Combine with VWAP/EMA for better timing."]'::jsonb, TRUE, 'Position of current price within today’s high-low range.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('dist_to_ema', 1, 'published', 'Dist To Ema', NULL, 'moving_average', 'distance', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 10}, {"name": "normalize", "type": "<class ''str''>", "default": "price"}]'::jsonb, '{"what_it_measures": "Dist To Ema derived from market data.", "how_to_read": "Positive = above EMA; negative = below; use normalized distance.", "typical_ranges": "Normalize to z‑score for thresholds (e.g., > 1.5σ).", "caveats": "Raw distances vary with price level; prefer normalized."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Avoid stretched entries", "Mean reversion checks"], "avoid_when": ["Flat EMA (no trend context)"], "example_conditions": ["dist_to_ema(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Normalize by ATR or z‑score for robust thresholds.", "Use with EMA slope to avoid counter‑trend fades.", "Favor entries after reversion signals, not on raw distance.", "Beware news spikes that distort distance temporarily."]'::jsonb, TRUE, 'Distance of price from EMA — stretch on chosen timeframe.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('dist_to_gamma_peak', 1, 'published', 'Dist To Gamma Peak', NULL, 'options_structure', 'gamma_peaks', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "spot_col", "type": "<class ''str''>", "default": "close"}]'::jsonb, '{"what_it_measures": "Dist To Gamma Peak derived from market data.", "how_to_read": "Positive when above peak; negative when below; near zero implies proximity to gamma focus.", "typical_ranges": "Ticker/spot dependent.", "caveats": "Snapshot‑based; intraday changes and data quality matter."}'::jsonb, '{"inputs": ["spot", "option chain"], "timeframe": "daily|intraday", "lookback": 1}'::jsonb, '{"best_when": ["Understanding where dealers’ hedging pressure concentrates"], "avoid_when": ["Sparse chain data"], "example_conditions": ["dist_to_gamma_peak(underlying=''SPY'') near 0"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Treat as context; not a direct trade signal.", "Strike granularity and OI clustering can shift peaks quickly.", "Combine with price action/VWAP and volume.", "Ensure chain freshness to avoid stale readings."]'::jsonb, TRUE, 'Distance of spot from peak options gamma strike (structure context).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('dist_to_oi_peak', 1, 'published', 'Dist To Oi Peak', NULL, 'options_structure', 'oi_peaks', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "spot_col", "type": "<class ''str''>", "default": "close"}]'::jsonb, '{"what_it_measures": "Dist To Oi Peak derived from market data.", "how_to_read": "Near zero implies spot near the largest OI concentration.", "typical_ranges": "Ticker dependent.", "caveats": "OI updates daily; not a real‑time signal."}'::jsonb, '{"inputs": ["spot", "option chain OI"], "timeframe": "daily", "lookback": 1}'::jsonb, '{"best_when": ["Structural context for intraday setups"], "avoid_when": ["Outdated OI data"], "example_conditions": ["dist_to_oi_peak(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Treat as slow-moving context; OI updates daily.", "Large OI peaks can attract/repel price; confirm with price/volume.", "Check chain quality and roll schedules for shifts.", "Combine with gamma/flow metrics for decisions."]'::jsonb, TRUE, 'Distance of spot from peak open interest strike (structure context).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('div_eod', 1, 'published', 'Div Eod', NULL, 'options_volatility', 'eod', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('donchian', 1, 'published', 'Donchian', NULL, 'price', 'channels', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "window", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Channel of highest high and lowest low over a window.", "how_to_read": "Price breaking above upper band suggests bullish breakout; below lower band suggests bearish breakout.", "typical_ranges": "20 periods common; longer windows reduce signals.", "caveats": "Many breakouts fail in choppy markets; consider volume confirm."}'::jsonb, '{"inputs": ["high", "low"], "timeframe": "5m | hourly | daily", "lookback": 20}'::jsonb, '{"best_when": ["Consolidations before trend moves"], "avoid_when": ["Choppy ranges"], "example_conditions": ["close > donchian_upper_20"], "step_by_step": ["Pick window", "Alert on break above/below band"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Confirm breaks with volume or retests to reduce false signals.", "Favor pullback entries after the breakout rather than chasing.", "Avoid trading Donchian signals in tight chop.", "Align with higher timeframe trend for better odds."]'::jsonb, TRUE, 'Channel of highest highs/lowest lows over a window (breakout tool).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('dpo', 1, 'published', 'Dpo', NULL, 'price', 'detrended', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "period", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Dpo derived from market data.", "how_to_read": "Oscillations around zero show short-term cycles independent of trend.", "typical_ranges": "Window 20 common; interpret zero crosses.", "caveats": "Not a standalone signal; use with context."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Cycle analysis within larger trends"], "avoid_when": ["Very noisy low timeframes"], "example_conditions": ["dpo(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use to isolate cycles; confirm with range/band context.", "Zero crosses and peaks help time entries/exits.", "Avoid as a sole trigger in strong trends.", "Tune window length to instrument behavior."]'::jsonb, TRUE, 'Detrended Price Oscillator — removes trend to highlight cycles.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('elder_ray', 1, 'published', 'Elder Ray', NULL, 'trend_strength', 'elder_ray', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 13}]'::jsonb, '{"what_it_measures": "Elder Ray derived from market data.", "how_to_read": "Bull Power = high - EMA; Bear Power = low - EMA; positive/negative show pressure.", "typical_ranges": "Depends on EMA window and volatility.", "caveats": "EMA choice matters; interpret direction with care."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 13}'::jsonb, '{"best_when": ["Assessing buying/selling pressure"], "avoid_when": ["Low signal-to-noise environments"], "example_conditions": ["elder_ray(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Interpret Bull/Bear Power relative to an EMA baseline.", "Rising Bull Power in uptrends adds conviction to pullbacks.", "Focus on direction/peaks rather than raw values.", "Use with trend filters and volume for robustness."]'::jsonb, TRUE, 'Elder Ray Index — bull/bear power vs EMA.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ema', 1, 'published', 'Ema', NULL, 'moving_average', 'ema', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 10}]'::jsonb, '{"what_it_measures": "Exponential moving average of price to track trend.", "how_to_read": "Price above EMA suggests bullish bias; EMA crossovers can mark shifts.", "typical_ranges": "9/20/50 common intraday/swing windows.", "caveats": "More sensitive than SMA; whipsaws more in chop."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Trending markets", "Pullback entries to EMA"], "avoid_when": ["Sideways chop"], "example_conditions": ["close crosses above ema(window=20)"], "step_by_step": ["Pick window", "Use slope or cross as confirmation"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Treat EMA as bias and dynamic level; not a guarantee.", "Use slope and distance to judge quality of pullbacks.", "Pair with higher timeframe EMA to avoid counter‑trend trades.", "Avoid repeated entries if price grinds sideways around EMA."]'::jsonb, TRUE, 'Exponential moving average — faster trend line.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ema_slope', 1, 'published', 'Ema Slope', NULL, 'moving_average', 'slope', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 10}, {"name": "period", "type": "<class ''int''>", "default": 1}]'::jsonb, '{"what_it_measures": "Ema Slope derived from market data.", "how_to_read": "Positive slope indicates uptrend acceleration; negative slope indicates downtrend.", "typical_ranges": "Ticker and timeframe dependent; compare relative to history.", "caveats": "Can flip rapidly on very short windows; smooth as needed."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["As a trend filter for entries"], "avoid_when": ["Noisy 1–2 bar windows"], "example_conditions": ["ema_slope(window=20, period=1) > 0"], "step_by_step": ["Pick EMA window", "Require slope > 0 for long setups"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Positive slope supports long bias; negative supports short bias.", "Magnitude matters — compare to historical distribution.", "Smooth or step up timeframe to reduce noise.", "Pair with EMA distance/cross for entries."]'::jsonb, TRUE, 'Slope of EMA — direction and steepness of trend.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('first15m_range_z', 1, 'published', 'First15M Range Z', NULL, 'intraday', 'open', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "ticker", "type": "<class ''str''>", "default": "SPY"}, {"name": "window_mins", "type": "<class ''int''>", "default": 15}, {"name": "norm", "type": "<class ''str''>", "default": "atr"}]'::jsonb, '{"what_it_measures": "First15M Range Z derived from market data.", "how_to_read": "> 1.0 large opening range day; < 0.5 quiet open.", "typical_ranges": "Most sessions 0.3–1.2.", "caveats": "Holiday/short sessions can skew values."}'::jsonb, '{"inputs": ["intraday high/low first N mins", "ATR or stddev"], "timeframe": "1m|5m", "lookback": 14}'::jsonb, '{"best_when": ["Gating intraday strategies by regime"], "avoid_when": ["Sparse prints"], "example_conditions": ["first15m_range_z(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Extreme opening ranges often imply volatile/choppy sessions.", "Use thresholds (e.g., 0.3–1.5) to gate strategies.", "Combine with open gap and momentum for robustness.", "Compute after the window completes (no lookahead)."]'::jsonb, TRUE, 'First N minutes range normalized by volatility.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('fisher_transform', 1, 'published', 'Fisher Transform', NULL, 'oscillator', 'fisher', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 9}]'::jsonb, '{"what_it_measures": "Fisher Transform derived from market data.", "how_to_read": "Look for sharp inflections and zero crosses.", "typical_ranges": "Depends on period; values unbounded.", "caveats": "Can be whippy; combine with filters."}'::jsonb, '{"inputs": ["high", "low"], "timeframe": "any", "lookback": 9}'::jsonb, '{"best_when": ["Spotting short-term reversals"], "avoid_when": ["Choppy low timeframes"], "example_conditions": ["fisher_transform(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Look for extremes and inflections; confirm with price action.", "Smooth or lengthen window to reduce whipsaws.", "Combine with bands/RSI or trend filter.", "Avoid trading isolated signals during news."]'::jsonb, TRUE, 'Fisher Transform — normalizes price to enhance turning points.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('gamma_concentration', 1, 'published', 'Gamma Concentration', NULL, 'options_structure', 'gamma_peaks', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "top_n", "type": "<class ''int''>", "default": 5}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('gamma_density_peak_strike', 1, 'published', 'Gamma Density Peak Strike', NULL, 'options_structure', 'gamma_density', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('gamma_peak_strike', 1, 'published', 'Gamma Peak Strike', NULL, 'options_structure', 'gamma_peaks', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('gamma_skew_left_right', 1, 'published', 'Gamma Skew Left Right', NULL, 'options_structure', 'gamma_density', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "spot_col", "type": "<class ''str''>", "default": "close"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('hour_of_day', 1, 'published', 'Hour Of Day', NULL, 'time', 'intraday', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "args", "type": "any"}, {"name": "kwargs", "type": "any"}]'::jsonb, '{"what_it_measures": "Hour Of Day derived from market data.", "how_to_read": "Categorical/ordinal hour values to capture session effects.", "typical_ranges": "13–20 UTC for US RTH hours (approx).", "caveats": "Convert to session timezone; DST shifts apply."}'::jsonb, '{"inputs": ["timestamp"], "timeframe": "intraday", "lookback": null}'::jsonb, '{"best_when": ["Filtering allowed trading hours"], "avoid_when": ["Non-US sessions without mapping"], "example_conditions": ["hour_of_day(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Liquidity and behavior vary by hour — filter accordingly.", "Open/close windows differ; midday often lower activity.", "Use as a filter, not a timing signal.", "Handle timezones/DST to avoid misalignment."]'::jsonb, TRUE, 'Hour-of-day feature — time-based behavior context.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ichimoku', 1, 'published', 'Ichimoku', NULL, 'price', 'trend', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "tenkan", "type": "<class ''int''>", "default": 9}, {"name": "kijun", "type": "<class ''int''>", "default": 26}, {"name": "senkou", "type": "<class ''int''>", "default": 52}, {"name": "shift_ahead", "type": "<class ''bool''>", "default": false}]'::jsonb, '{"what_it_measures": "Ichimoku derived from market data.", "how_to_read": "Price above cloud = bullish; below = bearish; crosses of Tenkan/Kijun add signals.", "typical_ranges": "Tenkan 9, Kijun 26, Senkou 52 are defaults.", "caveats": "Complex; ensure users understand line meanings before acting."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "hourly | daily", "lookback": 52}'::jsonb, '{"best_when": ["Trend analysis with support/resistance"], "avoid_when": ["Very short timeframes"], "example_conditions": ["price enters cloud from below"], "step_by_step": ["Use defaults", "Look for price/cloud relationships", "Confirm with trend"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Wait for closes relative to the cloud to reduce noise.", "Confirm with higher timeframe trend to avoid whipsaws.", "Use Tenkan/Kijun crosses as context, not sole triggers.", "Combine with EMA/MACD for clarity if new to Ichimoku."]'::jsonb, TRUE, 'Ichimoku Cloud — multi‑line trend and support/resistance system.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('intraday_vwap', 1, 'published', 'Intraday Vwap', NULL, 'volume', 'intraday_vwap', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "price_col", "type": "<class ''str''>", "default": "vwap"}, {"name": "volume_col", "type": "<class ''str''>", "default": "volume"}]'::jsonb, '{"what_it_measures": "Volume-weighted average price for the session.", "how_to_read": "Reference line for fair price; price above = buyer control; below = seller control.", "typical_ranges": "N/A; reference varies during session.", "caveats": "Resets each session; requires reliable intraday volume."}'::jsonb, '{"inputs": ["price", "volume"], "timeframe": "1m | 5m", "lookback": null}'::jsonb, '{"best_when": ["Intraday mean reversion and pullback entries"], "avoid_when": ["First minutes with erratic prints"], "example_conditions": ["abs(close - vwap)/vwap > 0.005"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["VWAP resets each session; don’t compare across days.", "Use distance bands (% from VWAP) to avoid chasing.", "Prefer liquid hours; thin sessions distort VWAP.", "Combine with volume or OBV for confirmation."]'::jsonb, TRUE, 'Intraday VWAP — volume-weighted average price during the session.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_percentile_52w', 1, 'published', 'Iv Percentile 52W', NULL, 'options_volatility', 'iv_rank', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window_days", "type": "<class ''int''>", "default": 252}]'::jsonb, '{"what_it_measures": "Percentile rank of IV vs 52-week history.", "how_to_read": "0.9 means 90% of days had lower IV; 0.1 means IV is low vs history.", "typical_ranges": "0–1 by construction.", "caveats": "Sensitive to outliers; rank vs percentile differ slightly."}'::jsonb, '{"inputs": ["ATM IV time series"], "timeframe": "daily", "lookback": 252}'::jsonb, '{"best_when": ["Premium strategy selection"], "avoid_when": ["Sparse IV series"], "example_conditions": ["iv_percentile_52w(underlying=\"SPY\") > 80"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["High percentile suggests rich IV; low suggests cheap IV.", "Percentile vs rank differ subtly; be consistent in selection.", "Outliers skew percentiles — review window and cleaning.", "Use with momentum/regime to avoid fighting market direction."]'::jsonb, TRUE, 'IV Percentile (52w) — fraction of past days with IV ≤ today.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_rank_52w', 1, 'published', 'Iv Rank 52W', NULL, 'options_volatility', 'iv_rank', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window_days", "type": "<class ''int''>", "default": 252}]'::jsonb, '{"what_it_measures": "Percentile of current ATM IV vs past year (0–1).", "how_to_read": "> 0.8 high IV (premium rich); < 0.2 low IV (premium cheap).", "typical_ranges": "0–1 by definition.", "caveats": "Depends on ATM definition and data quality."}'::jsonb, '{"inputs": ["ATM IV time series"], "timeframe": "daily", "lookback": 252}'::jsonb, '{"best_when": ["Choosing premium selling vs buying strategies"], "avoid_when": ["Stale IV"], "example_conditions": ["iv_rank_52w(underlying=\"SPY\") > 0.8"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["> 0.8 often favors selling premium; < 0.2 favors buying (with caution).", "Check earnings/events — regime can shift abruptly.", "Ensure ATM definition and data source are consistent across time.", "Combine with term slope and trend for a fuller view."]'::jsonb, TRUE, 'IV Rank tells you if options are expensive or cheap vs the past year (high >80%, low <20%).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_realized_spread', 1, 'published', 'Iv Realized Spread', NULL, 'options_volatility', 'iv_rv_spread', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window", "type": "<class ''int''>", "default": 20}, {"name": "freq", "type": "<class ''str''>", "default": "hour"}, {"name": "contract_type", "type": "str | None", "default": null}, {"name": "iv_source", "type": "<class ''str''>", "default": "snapshot"}, {"name": "quote_window", "type": "<class ''str''>", "default": "10:00-11:00"}, {"name": "strike_band", "type": "<class ''float''>", "default": 5.0}]'::jsonb, '{"what_it_measures": "Iv Realized Spread derived from market data.", "how_to_read": "> 0 IV above RV (rich premium); < 0 IV below RV (cheap).", "typical_ranges": "Ticker/window dependent; use distribution percentiles.", "caveats": "Sampling and annualization matter; quotes vs snapshots differ."}'::jsonb, '{"inputs": ["intraday/daily price", "option IV"], "timeframe": "hourly|daily", "lookback": 20}'::jsonb, '{"best_when": ["Premium selling/buying decision support"], "avoid_when": ["Sparse IV or erratic prints"], "example_conditions": ["iv_realized_spread(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Positive spread (IV>RV) suggests richer premium; negative suggests cheaper.", "Normalize by percentiles; raw values vary widely.", "Ensure consistent sampling/annualization across series.", "Use with IV rank and trend for decisions."]'::jsonb, TRUE, 'IV − realized volatility spread — IV premium vs recent realized vol.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_skew25_delta', 1, 'published', 'Iv Skew25 Delta', NULL, 'options_volatility', 'iv_skew', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "iv_source", "type": "<class ''str''>", "default": "snapshot"}, {"name": "quote_window", "type": "<class ''str''>", "default": "10:00-11:00"}, {"name": "strike_band", "type": "<class ''float''>", "default": 5.0}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_smile_wings', 1, 'published', 'Iv Smile Wings', NULL, 'options_volatility', 'smile', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "sampling", "type": "<class ''str''>", "default": "10:00-11:00"}, {"name": "wing_points", "type": "<class ''int''>", "default": 10}, {"name": "strike_band", "type": "<class ''float''>", "default": 20.0}]'::jsonb, '{"what_it_measures": "Iv Smile Wings derived from market data.", "how_to_read": "> 0 pronounced wings; < 0 inverted smile.", "typical_ranges": "Varies by ticker and market regime.", "caveats": "Sensitive to quote quality and wing selection."}'::jsonb, '{"inputs": ["option quotes"], "timeframe": "intraday", "lookback": 1}'::jsonb, '{"best_when": ["Smile analysis for vol strategies"], "avoid_when": ["Sparse quotes"], "example_conditions": ["iv_smile_wings(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Steeper wings imply pricier tails; consider tail-hedge costs.", "Compare within ticker/tenor; cross-asset smiles differ structurally.", "Use as context for vol strategy selection; not an entry trigger.", "Validate wing quotes; outliers can distort the measure."]'::jsonb, TRUE, 'IV smile wings — average wing IV minus ATM IV (smile convexity).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('iv_term_slope', 1, 'published', 'Iv Term Slope', NULL, 'options_volatility', 'term_structure', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "days_fwd", "type": "<class ''int''>", "default": 30}, {"name": "iv_source", "type": "<class ''str''>", "default": "snapshot"}, {"name": "quote_window", "type": "<class ''str''>", "default": "10:00-11:00"}, {"name": "strike_band", "type": "<class ''float''>", "default": 5.0}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('kama', 1, 'published', 'Kama', NULL, 'price', 'moving_average', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "er_period", "type": "<class ''int''>", "default": 10}, {"name": "fast", "type": "<class ''int''>", "default": 2}, {"name": "slow", "type": "<class ''int''>", "default": 30}]'::jsonb, '{"what_it_measures": "Kama derived from market data.", "how_to_read": "Tracks trend while slowing in noise; compare price vs KAMA.", "typical_ranges": "ER period ~10; fast/slow 2/30 typical.", "caveats": "More complex; ensure parameter understanding."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 10}'::jsonb, '{"best_when": ["Reducing whipsaw while following trend"], "avoid_when": ["Very fast scalping"], "example_conditions": ["kama(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["KAMA adapts speed to noise; smoother than EMA in chop.", "Use as dynamic support/resistance with pullbacks.", "Confirm with momentum or volume before entries.", "Tune ER/fast/slow to instrument behavior."]'::jsonb, TRUE, 'Kaufman Adaptive Moving Average — adapts speed to noise.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('keltner', 1, 'published', 'Keltner', NULL, 'price', 'channels', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "window", "type": "<class ''int''>", "default": 20}, {"name": "multiplier", "type": "<class ''float''>", "default": 2.0}]'::jsonb, '{"what_it_measures": "EMA-based channel using ATR as band width.", "how_to_read": "Touches outside channels imply strong moves; width reflects volatility.", "typical_ranges": "EMA window ~20; multiplier ~1.5–2.0.", "caveats": "Parameters affect sensitivity; compare to Bollinger for differences."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Trend pullbacks and breakouts"], "avoid_when": ["Very tight ranges"], "example_conditions": ["close > keltner_upper(window=20,multiplier=2.0)"], "step_by_step": ["Pick EMA window/multiplier", "Alert on touches or breaks"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["ATR-based bands are smoother than Bollinger in trends.", "Fade in ranges; use breaks/pullbacks in trends.", "Tune multiplier/window to timeframe and volatility.", "Combine with EMA/MACD to avoid fading strong moves."]'::jsonb, TRUE, 'Keltner Channels — ATR‑based envelope around EMA.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('lr_r2', 1, 'published', 'Lr R2', NULL, 'trend', 'quality', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 126}]'::jsonb, '{"what_it_measures": "Lr R2 derived from market data.", "how_to_read": "Closer to 1.0 = better linear fit; near 0 = noisy/no trend.", "typical_ranges": "0–1 by definition.", "caveats": "Linearity assumption; can be gamed by outliers."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Filter for clean trends"], "avoid_when": ["Short noisy windows"], "example_conditions": ["lr_r2(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Higher R² implies cleaner linear trend; set a threshold gate.", "Combine with slope sign for direction.", "Longer windows reduce noise but add lag.", "Beware outliers skewing fit; consider robust methods."]'::jsonb, TRUE, 'Linear regression R² — trend quality score.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('macd', 1, 'published', 'Macd', NULL, 'oscillator', 'macd', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "fast", "type": "<class ''int''>", "default": 12}, {"name": "slow", "type": "<class ''int''>", "default": 26}, {"name": "signal", "type": "<class ''int''>", "default": 9}]'::jsonb, '{"what_it_measures": "Macd derived from market data.", "how_to_read": "MACD above signal is bullish; below is bearish. Histogram expansion implies strengthening trend.", "typical_ranges": "Defaults 12/26/9; shorter windows are faster and noisier.", "caveats": "Lagging by design; avoid as sole trigger in choppy markets."}'::jsonb, '{"inputs": ["close"], "timeframe": "5m | hourly | daily", "lookback": 26}'::jsonb, '{"best_when": ["Trending markets", "Pullback entries in trend"], "avoid_when": ["Range/chop"], "example_conditions": ["macd(fast=12,slow=26,signal=9) crosses above signal"], "step_by_step": ["Pick timeframe", "Use defaults (12/26/9)", "Alert on cross + volume confirm"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "high"}'::jsonb, '["Wait for MACD cross with histogram confirming (expanding).", "Align with higher timeframe trend to reduce whipsaws.", "Use as confirmation for pullbacks; avoid as sole trigger in chop.", "Shorter windows (e.g., 8/21/5) trade faster but increase noise."]'::jsonb, TRUE, 'MACD crossing its signal line can mark momentum turning points. Use alerts on crosses and confirm with trend.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('mfi', 1, 'published', 'Mfi', NULL, 'volume', 'money_flow', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 14}]'::jsonb, '{"what_it_measures": "Mfi derived from market data.", "how_to_read": "> 80 often overbought; < 20 oversold; divergences can warn of turns.", "typical_ranges": "Period 14 common; thresholds 20/80.", "caveats": "Needs reliable volume; overlaps with RSI/OBV concepts."}'::jsonb, '{"inputs": ["high", "low", "close", "volume"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Range‑bound or mild trends"], "avoid_when": ["Illiquid names"], "example_conditions": ["mfi(period=14) < 20"], "step_by_step": ["Pick period", "Screen for extremes"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Money Flow Index — volume‑weighted RSI.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('momentum', 1, 'published', 'Momentum', NULL, 'price_trend', 'momentum', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 1}]'::jsonb, '{"what_it_measures": "Rate of price change; positive = up momentum, negative = down.", "how_to_read": "Positive values = upward momentum; negative = downward.", "typical_ranges": "Depends on window and ticker volatility; standardize if comparing.", "caveats": "Sensitive to outliers; normalize or cap if needed."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Trend continuation setups"], "avoid_when": ["Noisy low‑volume names"], "example_conditions": ["momentum(column=close, window=20) > 0"], "step_by_step": ["Pick window", "Screen for positive/negative momentum by bias"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Normalize or compare relatively across symbols.", "Combine with trend filters.", "Fade weak momentum in ranges."]'::jsonb, TRUE, 'Change in price over a window — directional thrust.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('momentum_score_total', 1, 'published', 'Momentum Score Total', NULL, 'composite', 'momentum_score', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "w_hourly", "type": "<class ''float''>", "default": 0.7}, {"name": "w_daily", "type": "<class ''float''>", "default": 0.3}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('obv', 1, 'published', 'Obv', NULL, 'volume', 'obv', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "price_col", "type": "<class ''str''>", "default": "close"}, {"name": "volume_col", "type": "<class ''str''>", "default": "volume"}]'::jsonb, '{"what_it_measures": "On-Balance Volume — cumulative volume flow with price direction.", "how_to_read": "Rising OBV suggests accumulation; falling suggests distribution.", "typical_ranges": "Unbounded; analyze slope/divergence vs price.", "caveats": "Sensitive to gaps and noisy prints; smooth if needed."}'::jsonb, '{"inputs": ["close", "volume"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Confirming breakouts/trends"], "avoid_when": ["Erratic volume data"], "example_conditions": ["obv() slope > 0"], "step_by_step": ["Compute OBV", "Compare slope vs price trend"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use OBV slope/divergence with price for confirmation.", "Smooth or aggregate if intraday noise is high.", "Pair with breakout tools (Donchian/MACD) for conviction.", "Beware of data glitches; volume quality matters."]'::jsonb, TRUE, 'On‑Balance Volume — cumulative volume flow with price direction.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('oi_change_1d', 1, 'published', 'Oi Change 1D', NULL, 'options_flow', 'open_interest', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Oi Change 1D derived from market data.", "how_to_read": "> 0 increasing positioning; < 0 decreasing.", "typical_ranges": "Ticker dependent; use percent changes.", "caveats": "OI updates lag; vendor differences."}'::jsonb, '{"inputs": ["option chain OI"], "timeframe": "daily", "lookback": 2}'::jsonb, '{"best_when": ["Context alongside price/volume"], "avoid_when": ["Sparse chain data"], "example_conditions": ["oi_change_1d(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Day-over-day change in options open interest — flow context.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('oi_concentration_hhi', 1, 'published', 'Oi Concentration Hhi', NULL, 'options_structure', 'concentration', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "top_n", "type": "<class ''int''>", "default": 5}]'::jsonb, '{"what_it_measures": "Oi Concentration Hhi derived from market data.", "how_to_read": "Higher HHI = OI concentrated at few strikes; lower = dispersed.", "typical_ranges": "0–1; >0.2 indicates moderate concentration.", "caveats": "Needs robust chain snapshots; differs by ticker."}'::jsonb, '{"inputs": ["option chain OI"], "timeframe": "daily", "lookback": 1}'::jsonb, '{"best_when": ["Structural context for support/resistance"], "avoid_when": ["Stale OI data"], "example_conditions": ["oi_concentration_hhi(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Herfindahl-Hirschman Index of OI — concentration across strikes.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('oi_peak_strike', 1, 'published', 'Oi Peak Strike', NULL, 'options_structure', 'oi_peaks', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Oi Peak Strike derived from market data.", "how_to_read": "Peak OI strike can act as a focal point for price into expiry.", "typical_ranges": "Ticker dependent; check proximity to spot.", "caveats": "OI can be stale; doesn’t guarantee support/resistance."}'::jsonb, '{"inputs": ["option chain OI"], "timeframe": "daily", "lookback": 1}'::jsonb, '{"best_when": ["Context for intraday levels"], "avoid_when": ["Sparse OI"], "example_conditions": ["oi_peak_strike(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Strike with maximum open interest — potential magnet.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('oi_trend', 1, 'published', 'Oi Trend', NULL, 'options_flow', 'open_interest', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}, {"name": "window", "type": "<class ''int''>", "default": 5}]'::jsonb, '{"what_it_measures": "Oi Trend derived from market data.", "how_to_read": "Rising OI trend suggests growing participation; falling suggests unwind.", "typical_ranges": "Ticker dependent.", "caveats": "OI direction alone doesn’t imply bullish/bearish without price context."}'::jsonb, '{"inputs": ["option chain OI"], "timeframe": "daily", "lookback": 5}'::jsonb, '{"best_when": ["Supporting evidence with price and IV"], "avoid_when": ["Data gaps"], "example_conditions": ["oi_trend(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Trend in open interest — multi-day accumulation or reduction.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('open_gap_z', 1, 'published', 'Open Gap Z', NULL, 'intraday', 'open', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "ticker", "type": "<class ''str''>", "default": "SPY"}, {"name": "atr_period", "type": "<class ''int''>", "default": 14}, {"name": "norm", "type": "<class ''str''>", "default": "atr"}]'::jsonb, '{"what_it_measures": "Opening gap size normalized by ATR.", "how_to_read": "> 1.0 large gap vs ATR/STD; sign indicates up/down gap.", "typical_ranges": "Most days within ±1.0; >2.0 is unusual.", "caveats": "Depends on data quality and normalization choice."}'::jsonb, '{"inputs": ["date", "open", "prev_close", "ATR or stddev"], "timeframe": "daily+intraday", "lookback": 14}'::jsonb, '{"best_when": ["Gating 0DTE or open-only strategies"], "avoid_when": ["Illiquid names"], "example_conditions": ["abs(open_gap_z(ticker=\"SPY\")) < 2.0"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Avoid fading extreme gaps.", "Wait for first minutes to settle.", "Gate entries by gap size."]'::jsonb, TRUE, 'Opening gap normalized by volatility — gauges shock at the open.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('pcr_eod', 1, 'published', 'Pcr Eod', NULL, 'options_flow', 'eod', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "args", "type": "any"}, {"name": "kwargs", "type": "any"}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('pcr_oi', 1, 'published', 'Pcr Oi', NULL, 'options_flow', 'ratios', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "underlying", "type": "<class ''str''>", "default": "SPY"}]'::jsonb, '{"what_it_measures": "Pcr Oi derived from market data.", "how_to_read": "> 1.0 more puts than calls; < 1.0 more calls.", "typical_ranges": "0.5–1.5 typical; varies by ticker.", "caveats": "OI includes legacy positions; combine with volume/price."}'::jsonb, '{"inputs": ["OI by type"], "timeframe": "daily", "lookback": 1}'::jsonb, '{"best_when": ["Bias context with price and IV"], "avoid_when": ["Short-term scalping"], "example_conditions": ["pcr_oi(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["OI reflects stock of positions; complement with volume for flow.", "> 1.0 does not mean bearish by itself — add price/IV context.", "Beware stale/erroneous OI updates; validate data freshness.", "Use as slow-moving bias, not a timing signal."]'::jsonb, TRUE, 'Put/Call Ratio by OI — positioning bias.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('pcr_volume', 1, 'published', 'Pcr Volume', NULL, 'options_flow', 'ratios', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[]'::jsonb, '{"what_it_measures": "Pcr Volume derived from market data.", "how_to_read": "> 1.0 more put volume; < 1.0 more call volume.", "typical_ranges": "Varies by ticker/session.", "caveats": "Intraday spikes can be event-driven; confirm."}'::jsonb, '{"inputs": ["option volume"], "timeframe": "intraday|daily", "lookback": 1}'::jsonb, '{"best_when": ["Session bias context"], "avoid_when": ["Very illiquid chains"], "example_conditions": ["pcr_volume(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Intraday spikes often event-driven — confirm with price and IV.", "Smooth or require minimum volume to reduce noise.", "Ratios vary by ticker — compare to own history.", "Use for context; avoid as standalone entry trigger."]'::jsonb, TRUE, 'Put/Call Ratio by volume — session flow bias.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ppo', 1, 'published', 'Ppo', NULL, 'oscillator', 'ppo', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "fast", "type": "<class ''int''>", "default": 12}, {"name": "slow", "type": "<class ''int''>", "default": 26}, {"name": "signal", "type": "<class ''int''>", "default": 9}]'::jsonb, '{"what_it_measures": "Percentage Price Oscillator — MACD variant normalized by price.", "how_to_read": "Above signal = bullish; below = bearish; percentages make cross‑symbol comparisons easier.", "typical_ranges": "Fast/slow/signal 12/26/9 common.", "caveats": "Similar to MACD; avoid redundancy if both present."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 26}'::jsonb, '{"best_when": ["Trend confirmation with cross‑asset comparisons"], "avoid_when": ["Redundant with MACD"], "example_conditions": ["ppo(fast=12,slow=26,signal=9) crosses above signal"], "step_by_step": ["Use defaults", "Alert on cross"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with trend to avoid chop.", "Normalize across prices.", "Confirm with higher timeframe."]'::jsonb, TRUE, 'Percentage Price Oscillator — MACD in percent terms.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('psar', 1, 'published', 'Psar', NULL, 'price', 'trend', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "step", "type": "<class ''float''>", "default": 0.02}, {"name": "max_step", "type": "<class ''float''>", "default": 0.2}]'::jsonb, '{"what_it_measures": "Parabolic SAR — trailing stop indicator.", "how_to_read": "Dots below price indicate uptrend; above indicate downtrend. Flips can be exit cues.", "typical_ranges": "Step 0.02, max 0.2 common defaults.", "caveats": "Sensitive to sudden reversals; use as trailing guide, not sole entry."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 100}'::jsonb, '{"best_when": ["Managing exits in trends"], "avoid_when": ["Whipsaw environments"], "example_conditions": ["psar(step=0.02,max_step=0.2) flips"], "step_by_step": ["Use defaults", "Trail exits with PSAR flips"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Works in trends, whipsaws in ranges.", "Use as trailing stop, not entry.", "Adjust acceleration for sensitivity."]'::jsonb, TRUE, 'Parabolic SAR — trend following stop/exit indicator.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('qstick', 1, 'published', 'Qstick', NULL, 'price_trend', 'qstick', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 10}]'::jsonb, '{"what_it_measures": "Qstick derived from market data.", "how_to_read": "> 0 buying bias; < 0 selling bias over the window.", "typical_ranges": "Window 8–20 common.", "caveats": "Open data quality matters; sensitive to gaps."}'::jsonb, '{"inputs": ["open", "close"], "timeframe": "any", "lookback": 10}'::jsonb, '{"best_when": ["Background bias for trend setups"], "avoid_when": ["Gap-heavy instruments"], "example_conditions": ["qstick(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Qstick — moving average of (close - open) to gauge buying/selling bias.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ret', 1, 'published', 'Ret', NULL, 'price_trend', 'returns', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 1}]'::jsonb, '{"what_it_measures": "Ret derived from market data.", "how_to_read": "> 0 positive momentum; < 0 negative.", "typical_ranges": "Depends on window and volatility.", "caveats": "Sensitive to outliers; compare with z‑score if needed."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Trend bias checks"], "avoid_when": ["Event-driven spikes"], "example_conditions": ["ret(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Rolling return over a window — simple momentum.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('returns_last_30m', 1, 'published', 'Returns Last 30M', NULL, 'intraday', 'windowed', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "args", "type": "any"}, {"name": "kwargs", "type": "any"}]'::jsonb, '{"what_it_measures": "Returns Last 30M derived from market data.", "how_to_read": "> 0 recent uptick; < 0 downtick.", "typical_ranges": "Ticker/session dependent.", "caveats": "Noisy; combine with filters."}'::jsonb, '{"inputs": ["intraday close"], "timeframe": "1m|5m", "lookback": 30}'::jsonb, '{"best_when": ["Quick bias checks before entries"], "avoid_when": ["News spikes"], "example_conditions": ["returns_last_30m(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Return over the last 30 minutes — very recent move.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('roc', 1, 'published', 'Roc', NULL, 'price', 'momentum', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 10}]'::jsonb, '{"what_it_measures": "Roc derived from market data.", "how_to_read": "> 0 increasing; < 0 decreasing momentum.", "typical_ranges": "Ticker/window dependent.", "caveats": "Noisy on small windows; smooth if needed."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 12}'::jsonb, '{"best_when": ["Momentum scans"], "avoid_when": ["Very low volume"], "example_conditions": ["roc(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Rate of Change — percent change over N periods.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('rolling_std', 1, 'published', 'Rolling Std', NULL, 'volatility', 'rolling_std', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Rolling Std derived from market data.", "how_to_read": "Higher std = more volatile; compare across time with same window.", "typical_ranges": "Ticker dependent; use percentiles.", "caveats": "Window choice impacts smoothness."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Regime detection", "Sizing adjustments"], "avoid_when": ["Tiny windows"], "example_conditions": ["rolling_std(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Rolling standard deviation of returns — realized volatility.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('rsi', 1, 'published', 'Rsi', NULL, 'oscillator', 'rsi', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "period", "type": "<class ''int''>", "default": 14}]'::jsonb, '{"what_it_measures": "Relative Strength Index — momentum oscillator 0–100.", "how_to_read": "Above 70 often overbought; below 30 oversold. Crosses of 50 can mark trend bias.", "typical_ranges": "20–80 common; 30/70 for extremes; use 40/60 in strong trends.", "caveats": "RSI can stay extreme during strong trends; extremes alone are not entry signals."}'::jsonb, '{"inputs": ["close"], "timeframe": "5m | hourly | daily", "lookback": 14}'::jsonb, '{"best_when": ["Range‑bound markets", "Slower timeframes reduce noise"], "avoid_when": ["News spikes", "Very low liquidity"], "example_conditions": ["rsi(period=14) < 30", "rsi(period=14) crosses above 30"], "step_by_step": ["Pick timeframe", "Choose threshold (30/70)", "Run screen", "Set alert on cross"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "high"}'::jsonb, '["Use 30/70 as a start; shift to 40/60 in strong trends.", "Prefer crosses back through thresholds over static extremes.", "Combine with trend filter (e.g., EMA) to reduce fade risk.", "Avoid trading solely on RSI during news-driven sessions."]'::jsonb, TRUE, 'RSI shows when a symbol may be oversold (<30) or overbought (>70). Use it to quickly find possible rebounds or exhaustion.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('rsi_last_hour', 1, 'published', 'Rsi Last Hour', NULL, 'intraday', 'session_window', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 7}]'::jsonb, '{"what_it_measures": "Rsi Last Hour derived from market data.", "how_to_read": "< 30 oversold; > 70 overbought for last hour only.", "typical_ranges": "Session dependent; use with caution near open/close.", "caveats": "Short lookback; noisy and fast changing."}'::jsonb, '{"inputs": ["intraday close"], "timeframe": "1m|5m", "lookback": 12}'::jsonb, '{"best_when": ["Fine gating of intraday entries"], "avoid_when": ["Low-liquidity names"], "example_conditions": ["rsi_last_hour(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'RSI computed over the last hour — recent intraday momentum.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('sma', 1, 'published', 'Sma', NULL, 'price', 'moving_average', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Simple moving average of price.", "how_to_read": "Price above SMA implies uptrend bias; below implies downtrend.", "typical_ranges": "20/50/200 periods are common.", "caveats": "Lagging indicator; whipsaws in chop."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 20}'::jsonb, '{"best_when": ["Smoother trend filters", "Regime checks"], "avoid_when": ["Micro‑scalping"], "example_conditions": ["close > sma(window=200)"], "step_by_step": ["Pick window (e.g., 200d)", "Filter signals by SMA direction"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["SMA is slower than EMA.", "Use crossovers cautiously due to lag.", "Confirm with price structure."]'::jsonb, TRUE, 'Simple moving average — baseline trend line.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('sold_flow_ratio', 1, 'published', 'Sold Flow Ratio', NULL, 'options_flow', 'ratio', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "window", "type": "int | None", "default": null}]'::jsonb, '{"what_it_measures": "Sold Flow Ratio derived from market data.", "how_to_read": "Higher values indicate more selling activity relative to buying.", "typical_ranges": "Depends on ticker and window.", "caveats": "Classification depends on print interpretation; vendor differences."}'::jsonb, '{"inputs": ["options prints"], "timeframe": "intraday|daily", "lookback": 20}'::jsonb, '{"best_when": ["Context for premium selling vs buying regimes"], "avoid_when": ["Low print reliability"], "example_conditions": ["sold_flow_ratio(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Sold flow ratio — fraction of sold options in total flow.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('stoch_rsi', 1, 'published', 'Stoch Rsi', NULL, 'oscillator', 'stoch_rsi', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "rsi_period", "type": "<class ''int''>", "default": 14}, {"name": "stoch_period", "type": "<class ''int''>", "default": 14}, {"name": "smooth_k", "type": "<class ''int''>", "default": 3}, {"name": "smooth_d", "type": "<class ''int''>", "default": 3}]'::jsonb, '{"what_it_measures": "Stochastic RSI — speed of RSI changes, 0–1.", "how_to_read": "Values near 0 = RSI at lows; near 1 = RSI at highs; crosses indicate momentum turns.", "typical_ranges": "Use RSI period 14; Stoch smoothing 3–3 is common.", "caveats": "Very sensitive; combine with higher timeframe bias to reduce noise."}'::jsonb, '{"inputs": ["close"], "timeframe": "15m | hourly | daily", "lookback": 14}'::jsonb, '{"best_when": ["Short‑term mean reversion"], "avoid_when": ["High volatility spikes"], "example_conditions": ["stoch_rsi(rsi_period=14) crosses above 0.2"], "step_by_step": ["Compute RSI", "Apply Stoch smoothing", "Alert on cross"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Very sensitive — use with a trend or regime filter.", "Favor cross signals (0.2/0.8) rather than static extremes.", "Consider minimum bar spacing to avoid rapid re-signals.", "Pair with VWAP/EMA context for intraday usage."]'::jsonb, TRUE, 'Stochastic of RSI — sensitivity boost for oscillations.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('stochastic', 1, 'published', 'Stochastic', NULL, 'oscillator', 'stochastic', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period_k", "type": "<class ''int''>", "default": 14}, {"name": "period_d", "type": "<class ''int''>", "default": 3}]'::jsonb, '{"what_it_measures": "Stochastic derived from market data.", "how_to_read": "%K/%D above 80 often overbought; below 20 oversold. Crosses imply shifts.", "typical_ranges": "%K=14, %D=3 common defaults.", "caveats": "Overlaps with RSI; pick one to avoid redundancy."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Range‑bound markets"], "avoid_when": ["Strong trends"], "example_conditions": ["stochastic(period_k=14, period_d=3) crosses below 20 then above"], "step_by_step": ["Pick windows", "Alert on threshold crosses"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Prefer cross-through of 20/80 bands over raw levels.", "Align with higher timeframe to avoid fading strong trends.", "Avoid redundancy if RSI already used for the same purpose.", "Smooth with %D to reduce noise on lower timeframes."]'::jsonb, TRUE, 'Stochastic oscillator — position of close within recent range.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('supertrend', 1, 'published', 'Supertrend', NULL, 'price', 'trend', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 10}, {"name": "multiplier", "type": "<class ''float''>", "default": 3.0}]'::jsonb, '{"what_it_measures": "Supertrend derived from market data.", "how_to_read": "Price above Supertrend line implies bullish state; below implies bearish. Flips mark potential trend changes.", "typical_ranges": "ATR period 10–14; multiplier 2–3 common.", "caveats": "Lagging and can whipsaw in chop; treat flips as context not guarantee."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "5m | hourly | daily", "lookback": 14}'::jsonb, '{"best_when": ["Trend following with pullback entries"], "avoid_when": ["Tight ranges"], "example_conditions": ["supertrend(period=10,multiplier=3) flips to bullish"], "step_by_step": ["Pick ATR period/multiplier", "Watch for flip + confirm with price action"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Treat flips as context; wait for candle close or retest before entries.", "Tune ATR multiplier by timeframe/volatility to reduce whipsaws.", "Combine with trend filters (EMA/MACD) for alignment.", "Avoid relying on Supertrend alone in range-bound markets."]'::jsonb, TRUE, 'Trend overlay using ATR bands that flips on crosses.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('trix', 1, 'published', 'Trix', NULL, 'price', 'momentum', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "period", "type": "<class ''int''>", "default": 15}]'::jsonb, '{"what_it_measures": "Trix derived from market data.", "how_to_read": "> 0 bullish bias; < 0 bearish; crosses of signal line add timing.", "typical_ranges": "Longer periods reduce noise; default varies.", "caveats": "Heavily smoothed; reacts slowly but avoids chop."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 15}'::jsonb, '{"best_when": ["Filter trend continuation"], "avoid_when": ["Very short timeframes"], "example_conditions": ["trix(column=close,period=15) crosses above 0"], "step_by_step": ["Pick period", "Alert on zero/signal cross"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'TRIX — triple‑smoothed rate of change (trend momentum).') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('tsi', 1, 'published', 'Tsi', NULL, 'price', 'momentum', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "r", "type": "<class ''int''>", "default": 25}, {"name": "s", "type": "<class ''int''>", "default": 13}]'::jsonb, '{"what_it_measures": "Tsi derived from market data.", "how_to_read": "> 0 suggests bullish momentum; < 0 bearish; crosses can signal turns.", "typical_ranges": "Parameters r,s tune smoothing; defaults vary.", "caveats": "Smoother than RSI; slower to react."}'::jsonb, '{"inputs": ["close"], "timeframe": "any", "lookback": 25}'::jsonb, '{"best_when": ["Filter for sustained momentum"], "avoid_when": ["Fast scalping"], "example_conditions": ["tsi(column=close,r=25,s=13) crosses above 0"], "step_by_step": ["Pick r/s", "Alert on zero cross or slope"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'True Strength Index — double‑smoothed momentum oscillator.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('ultimate_oscillator', 1, 'published', 'Ultimate Oscillator', NULL, 'price', 'momentum', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "short", "type": "<class ''int''>", "default": 7}, {"name": "mid", "type": "<class ''int''>", "default": 14}, {"name": "long", "type": "<class ''int''>", "default": 28}]'::jsonb, '{"what_it_measures": "Ultimate Oscillator derived from market data.", "how_to_read": "> 50 bullish bias; < 50 bearish; extremes over 70/under 30 flag overbought/oversold.", "typical_ranges": "Short/mid/long defaults often 7/14/28.", "caveats": "Complexity may not add value over simpler oscillators for beginners."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 28}'::jsonb, '{"best_when": ["Reducing whipsaw vs single‑window oscillators"], "avoid_when": ["Overly complex screens"], "example_conditions": ["ultimate_oscillator(short=7,mid=14,long=28) > 50"], "step_by_step": ["Use defaults", "Filter extremes or 50‑line crosses"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Ultimate Oscillator — multi-window momentum to reduce false signals.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('vix_delta', 1, 'published', 'Vix Delta', NULL, 'regime', 'vix', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[]'::jsonb, '{"what_it_measures": "Vix Delta derived from market data.", "how_to_read": "> 0 rising fear; < 0 easing.", "typical_ranges": "±1–2 typical; larger moves indicate stress.", "caveats": "VIX is equity-focused; use context for other assets."}'::jsonb, '{"inputs": ["^VIX"], "timeframe": "daily|hourly", "lookback": 1}'::jsonb, '{"best_when": ["Gating risk and adjusting size"], "avoid_when": ["Unrelated assets without correlation"], "example_conditions": ["vix_delta(...) condition"], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Change in VIX — daily or intraday delta for regime awareness.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('vix_level', 1, 'published', 'Vix Level', NULL, 'regime', 'vix', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "index_ticker", "type": "<class ''str''>", "default": "I:VIX"}]'::jsonb, '{"what_it_measures": "CBOE VIX level — implied vol of S&P 500 options.", "how_to_read": "Higher VIX implies higher market volatility and risk; many systems reduce risk above thresholds (e.g., 25).", "typical_ranges": "10–35 typical; >40 rare stress events.", "caveats": "VIX applies to S&P 500; relevance varies by asset."}'::jsonb, '{"inputs": ["^VIX"], "timeframe": "daily | hourly", "lookback": 1}'::jsonb, '{"best_when": ["Portfolio/risk gating"], "avoid_when": ["Non‑equity assets without correlation"], "example_conditions": ["vix_level(index_ticker=^VIX) > 25"], "step_by_step": ["Fetch VIX", "Compare to thresholds", "Gate strategies accordingly"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use as a risk gate/tilt, not an entry signal.", "Thresholds are policy choices; 20–25 often a caution zone.", "Daily values are stabler than intraday for gating.", "Pair with IV rank or momentum for nuanced decisions."]'::jsonb, TRUE, 'VIX level — market fear proxy for regime gating.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('vix_term_slope', 1, 'published', 'Vix Term Slope', NULL, 'regime', 'vix_term', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "near", "type": "<class ''str''>", "default": "I:VIX"}, {"name": "far", "type": "<class ''str''>", "default": "I:VIX3M"}]'::jsonb, '{"what_it_measures": "Slope of VIX term structure (contango/backwardation).", "how_to_read": "Positive slope (contango) often calm regime; negative (backwardation) often stress.", "typical_ranges": "Near‑far spread a few points in calm; flips negative in stress.", "caveats": "Term structure can shift intraday; use daily for stability."}'::jsonb, '{"inputs": ["VIX term quotes"], "timeframe": "daily", "lookback": 1}'::jsonb, '{"best_when": ["Portfolio gating and tilt"], "avoid_when": ["Sparse/laggy data"], "example_conditions": ["vix_term_slope(near=30,far=90) < 0"], "step_by_step": ["Fetch near/far VIX", "Compute slope", "Gate risk when negative"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Positive slope (contango) generally calmer; negative (backwardation) caution.", "Use daily data to avoid noisy intraday flips.", "Treat as a context gate, not a standalone entry signal.", "Combine with VIX level and IV rank for robustness."]'::jsonb, TRUE, 'Slope of VIX term structure — contango vs backwardation.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('vol_zscore', 1, 'published', 'Vol Zscore', NULL, 'volume', 'zscore', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "window", "type": "<class ''int''>", "default": 20}]'::jsonb, '{"what_it_measures": "Volume z-score — how unusual current volume is vs recent average.", "how_to_read": "> 2.0 implies unusually high volume; < -2.0 unusually low.", "typical_ranges": "Window 20 common; Z 2–3 marks spikes.", "caveats": "Earnings/news can dominate; combine with context."}'::jsonb, '{"inputs": ["volume"], "timeframe": "1m | 5m | hourly | daily", "lookback": 20}'::jsonb, '{"best_when": ["Confirming breakouts/moves"], "avoid_when": ["Illiquid tickers"], "example_conditions": ["vol_zscore(window=20) > 2.0"], "step_by_step": ["Pick window", "Alert on spikes"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Focus on spikes with supporting price action, not isolated prints.", "Debounce repeated alerts in choppy sessions.", "Compare against session context (open/close) to avoid false positives.", "Filter illiquid symbols where prints are unreliable."]'::jsonb, TRUE, 'Volume Z‑Score — unusual activity vs recent history.') ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('volatility', 1, 'published', 'Volatility', NULL, 'volatility', 'realized', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "column", "type": "<class ''str''>", "default": "close"}, {"name": "window", "type": "<class ''int''>", "default": 3}]'::jsonb, '{"what_it_measures": "Base class for all technical indicators.", "how_to_read": "", "typical_ranges": "", "caveats": ""}'::jsonb, '{"inputs": [], "timeframe": "", "lookback": null}'::jsonb, '{"best_when": [], "avoid_when": [], "example_conditions": [], "step_by_step": []}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, NULL, FALSE, NULL) ON CONFLICT (id, version) DO NOTHING;
INSERT INTO sc.indicators (id, version, status, title, subtitle, category, subcategory, tags, short_description, long_description, parameters, measures, data_requirements, usage, performance_hints, assistant_hints, novice_ready, beginner_summary) VALUES ('williams_r', 1, 'published', 'Williams R', NULL, 'oscillator', 'williams_r', ARRAY[]::text[], 'Base class for all technical indicators.', 'Base class for all technical indicators.', '[{"name": "period", "type": "<class ''int''>", "default": 14}]'::jsonb, '{"what_it_measures": "Williams R derived from market data.", "how_to_read": "Above -20 overbought; below -80 oversold.", "typical_ranges": "Lookback 14 common; thresholds -20/-80.", "caveats": "Similar to Stochastic; choose one to avoid redundancy."}'::jsonb, '{"inputs": ["high", "low", "close"], "timeframe": "any", "lookback": 14}'::jsonb, '{"best_when": ["Range‑bound markets"], "avoid_when": ["Strong trends"], "example_conditions": ["williams_r(period=14) < -80"], "step_by_step": ["Pick period", "Screen for extremes"]}'::jsonb, '{"cost_band": "low", "latency_band": "rt_fast", "stability": "medium"}'::jsonb, '["Use with a trend filter.", "Avoid thinly traded symbols.", "Validate on your timeframe."]'::jsonb, TRUE, 'Williams %R — overbought/oversold oscillator.') ON CONFLICT (id, version) DO NOTHING;
COMMIT;
