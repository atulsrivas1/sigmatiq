-- AUTO-GENERATED seed for sc.simple_recipes
BEGIN;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('breakout_pullback_scan_5m', 1, 'published', 'Scan Breakout Pullbacks (5m)', 'Find first pullbacks after real breakouts with volume.', 'Scan 5m for breakouts confirmed by volume, then first clean pullback to EMA/VWAP.', 'beginner', 'beginner', 'indicator_set', 'breakout_pullback_v1', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 40, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('donchian_breakouts_5m', 1, 'published', 'Donchian Breakouts (5m)', 'Trade real breaks confirmed by volume.', 'Scan 5m for Donchian breaks with volume spikes.', 'beginner', 'beginner', 'indicator_set', 'donchian_channel_breakouts_v1', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 90, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('ema_adx_trend_follow_backtest_hourly', 1, 'published', 'EMA Trend Follow (ADX Gate)', 'Follow trend only when ADX>25.', 'Backtest EMA trend-follow with ADX>25 gate to avoid chop.', 'beginner', 'beginner', 'strategy', 'ema_trend_follow_adx_gate', 1, '{"operation": "backtest", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'conservative', 'watchlist', 65, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('gap_and_go_backtest_5m', 1, 'published', 'Gap and Go (5m)', 'Small gap + strong 15m + momentum.', 'Backtest a small-gap continuation setup with session context.', 'beginner', 'beginner', 'strategy', 'gap_and_go', 1, '{"operation": "backtest", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 75, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('gap_fade_screen_5m', 1, 'published', 'Gap Fade (5m)', 'Fade overdone gaps with session context.', 'Screen for overdone gaps with supportive session/momentum context.', 'beginner', 'beginner', 'strategy', 'gap_fade', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 77, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('ichimoku_trend_gate_screen_hourly', 1, 'published', 'Ichimoku Trend Gate (Hourly)', 'Trade with cloud bias and TK cross.', 'Screen hourly for cloud bias with Tenkan/Kijun cross.', 'beginner', 'beginner', 'indicator_set', 'ichimoku_trend_gate_v1', 1, '{"operation": "screen", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 85, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('intraday_momentum_screen_5m', 1, 'published', 'Intraday Momentum (5m)', 'Trade strong intraday momentum only when volume supports.', 'Screen 5m for momentum bursts with volume support.', 'beginner', 'beginner', 'strategy', 'intraday_momentum', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 120, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('iv_rank_extremes_v1', 1, 'published', 'IV Rank Extremes', 'Spot unusually high or low implied volatility', 'Shows symbols with IV rank above 80% or below 20% — useful for options strategies and risk context.', 'beginner', 'beginner', 'indicator', 'iv_rank_52w', 1, '{"operation": "screen", "timeframe": "daily", "params": {"upper": 80, "lower": 20}}'::jsonb, '{"universe_preset": "sp500", "universe_cap": 500, "throttle_per_min": 1}'::jsonb, 'conservative', 'sp500', 30, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('keltner_channel_break_screen_hourly', 1, 'published', 'Keltner Breaks (Hourly)', 'Trade channel breaks aligned with EMA trend.', 'Screen hourly for Keltner breaks with EMA alignment.', 'beginner', 'beginner', 'indicator_set', 'keltner_channel_trend_v1', 1, '{"operation": "screen", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 95, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('macd_cross_alerts_v1', 1, 'published', 'MACD Cross Alerts', 'Get notified when momentum flips', 'Alerts you when MACD crosses its signal line — a simple, popular momentum cue.', 'beginner', 'beginner', 'indicator', 'macd', 1, '{"operation": "alert", "timeframe": "hourly", "params": {"fast": 12, "slow": 26, "signal": 9, "cross": "any"}}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 1}'::jsonb, 'balanced', 'watchlist', 20, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('macd_trend_pullback_screen_5m', 1, 'published', 'MACD Trend Pullbacks (5m)', 'Combine MACD trend with pullbacks to EMA.', 'Screen 5m for MACD uptrend and pullbacks to EMA with volume.', 'beginner', 'beginner', 'indicator_set', 'macd_trend_pullback_v1', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 55, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('mean_reversion_bands_hourly', 1, 'published', 'Mean Reversion Bands (Hourly)', 'Fade extremes only with oscillator turn.', 'Scan hourly for band extremes with RSI/StochRSI confirmation.', 'beginner', 'beginner', 'indicator_set', 'mean_reversion_bands_v1', 1, '{"operation": "screen", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 80, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('momentum_breakout_screen_5m', 1, 'published', 'Momentum Breakouts (5m)', 'Find real breakouts with momentum and volume.', 'Screen 5m for momentum breakouts confirmed by volume/OBV.', 'beginner', 'beginner', 'indicator_set', 'momentum_breakout_v1', 1, '{"operation": "screen", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 35, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('options_premium_review_daily', 1, 'published', 'Options Premium Review (Daily)', 'Check if premium is rich or cheap vs history.', 'Daily IV rank + term slope to decide if premium is rich or cheap.', 'beginner', 'beginner', 'indicator_set', 'options_premium_selector_v1', 1, '{"operation": "screen", "timeframe": "daily"}'::jsonb, '{"universe_preset": "sp500", "universe_cap": 500, "throttle_per_min": 1}'::jsonb, 'conservative', 'sp500', 60, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('relative_strength_rotation_daily', 1, 'published', 'Relative Strength Rotation (Daily)', 'Rotate into leaders with regime context.', 'Backtest a simple rotation: leaders by momentum proxy with regime check.', 'beginner', 'beginner', 'strategy', 'relative_strength_rotation', 1, '{"operation": "backtest", "timeframe": "daily"}'::jsonb, '{"universe_preset": "sp500", "universe_cap": 500, "throttle_per_min": 1}'::jsonb, 'conservative', 'sp500', 110, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('rsi_oversold_screen_v1', 1, 'published', 'Find Oversold Stocks (RSI < 30)', 'Beginner-friendly watchlist screen in under a minute', 'Shows symbols where RSI is below 30 on the chosen timeframe — a simple way to surface potential rebounds.', 'beginner', 'beginner', 'indicator', 'rsi', 1, '{"operation": "screen", "timeframe": "hourly", "params": {"period": 14, "op": "<", "value": 30}}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'conservative', 'watchlist', 10, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('swing_trend_follow_backtest_hourly', 1, 'published', 'Swing Trend Follow (Hourly)', 'EMA/MACD confirmation with ATR brackets.', 'Backtest swing trend-follow with ATR-based brackets.', 'beginner', 'beginner', 'strategy', 'swing_trend_follow', 1, '{"operation": "backtest", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 115, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('trend_follow_alignment_backtest_hourly', 1, 'published', 'Trend-Follow Alignment (Hourly Backtest)', 'Go with daily trend only when hourly agrees.', 'Backtest the alignment strategy (daily bias + hourly alignment).', 'beginner', 'beginner', 'strategy', 'trend_follow_alignment', 1, '{"operation": "backtest", "timeframe": "hourly"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'conservative', 'watchlist', 50, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('vwap_momentum_scalp_5m', 1, 'published', 'VWAP Momentum Scalp (5m)', 'Trade quick bursts near VWAP in liquid names.', 'Backtest quick momentum bursts near VWAP with OBV/volume support.', 'beginner', 'beginner', 'strategy', 'vwap_momentum_scalp', 1, '{"operation": "backtest", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 200, "throttle_per_min": 2}'::jsonb, 'balanced', 'watchlist', 100, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
INSERT INTO sc.simple_recipes (recipe_id, version, status, title, subtitle, beginner_summary, persona, difficulty, target_kind, target_id, target_version, defaults, guardrails, risk_profile, universe_preset, sort_rank, tags) VALUES ('zerosigma_0dte_gate_subscribe_5m', 1, 'published', '0DTE Gate (Subscribe 5m)', 'Only trade when intraday conditions are favorable.', 'Subscribe to 0DTE gate (5m) and act only when gate=green.', 'beginner', 'beginner', 'indicator_set', 'zerosigma_0dte_gate', 1, '{"operation": "subscribe", "timeframe": "5m"}'::jsonb, '{"universe_preset": "watchlist", "universe_cap": 50, "throttle_per_min": 1}'::jsonb, 'conservative', 'watchlist', 70, ARRAY[]::text[]) ON CONFLICT (recipe_id, version) DO NOTHING;
COMMIT;
