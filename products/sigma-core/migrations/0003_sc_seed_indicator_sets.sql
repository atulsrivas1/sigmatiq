-- AUTO-GENERATED seed for sc.indicator_sets & sc.indicator_set_components
BEGIN;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('breakout_pullback_v1', 1, 'published', 'Breakout Pullback Entry', 'Enter on first pullback after breakout to EMA/VWAP with volume confirmation.', ARRAY[]::text[], '"Use Donchian breakout to locate momentum and buy pullbacks to EMA/VWAP when volume remains healthy."'::jsonb, '{"signal_logic": "(close>donchian_upper_20) THEN wait for close near ema20 or vwap AND vol_z>0", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["5m OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Confirm breakout with a close beyond range, not a wick.", "Enter on first clean pullback to EMA/VWAP with support.", "Avoid entries if volume dries up on the pullback.", "Use stops below pullback swing or VWAP band; predefine risk."]'::jsonb, TRUE, 'Enter after a breakout on the first pullback to EMA or VWAP with healthy volume.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('breakout_pullback_v1', 1, 1, 'donchian', NULL, '{"window": 20}'::jsonb, 'breakout', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('breakout_pullback_v1', 1, 2, 'ema', NULL, '{"column": "close", "window": 20}'::jsonb, 'pullback_level', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('breakout_pullback_v1', 1, 3, 'intraday_vwap', NULL, '{"price_col": "close", "volume_col": "volume"}'::jsonb, 'pullback_level', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('breakout_pullback_v1', 1, 4, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume_confirm', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('donchian_channel_breakouts_v1', 1, 'published', 'Donchian Channel Breakouts', 'Classic breakouts with volume confirmation to reduce false signals.', ARRAY[]::text[], '"Classic breakouts with volume confirmation to reduce false signals."'::jsonb, '{"signal_logic": "close>donchian_upper AND vol_z>2 (inverse for short)", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Use close beyond channel, not intrabar wicks.", "Avoid low-liquidity names.", "Set stops just inside channel.", "Take partials quickly in chop."]'::jsonb, TRUE, 'Enter on Donchian breaks only with a volume spike.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('donchian_channel_breakouts_v1', 1, 1, 'donchian', NULL, '{"window": 20}'::jsonb, 'range', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('donchian_channel_breakouts_v1', 1, 2, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume_confirm', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('ema_trend_adx_filter_v1', 1, 'published', 'EMA Trend with ADX Gate', 'Follow trend when EMA direction agrees and ADX confirms strength.', ARRAY[]::text[], '"Use EMA for direction and gate trades with ADX>25 to reduce whipsaws."'::jsonb, '{"signal_logic": "close>ema20 AND adx>25 => bullish context (inverse for bearish)", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["hourly OHLC"], "timeframe": "hourly"}'::jsonb, NULL, '["Use EMA for direction; require ADX>25 before entries.", "Avoid counter-trend setups with low ADX.", "Review higher timeframe context weekly.", "Consider ATR for stop sizing."]'::jsonb, TRUE, 'Trade with the EMA trend only when ADX shows a meaningful trend (e.g., >25).', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('ema_trend_adx_filter_v1', 1, 1, 'ema', NULL, '{"column": "close", "window": 20}'::jsonb, 'trend', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('ema_trend_adx_filter_v1', 1, 2, 'adx', NULL, '{"period": 14}'::jsonb, 'trend_strength', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('fundamental_tech_hybrid_v1', 1, 'published', 'Fundamental‑Technical Hybrid (Awareness)', 'Surface candidates where technical trend aligns with external fundamentals (placeholder).', ARRAY[]::text[], '"Start with technical alignment; later integrate a fundamental score as a separate signal."'::jsonb, '{"signal_logic": "technical trend up AND reasonable volatility; (future) fundamentals aligned", "timeframe_alignment": "daily"}'::jsonb, NULL, NULL, '{"inputs": ["daily OHLC"], "timeframe": "daily"}'::jsonb, NULL, '["Treat fundamentals as a separate gate; avoid overfitting.", "Use daily timeframe for stability; ignore intraday noise.", "Align technical trend first; then apply fundamental tilt.", "Refresh fundamentals on schedule; avoid stale signals."]'::jsonb, TRUE, 'Awareness list where technical uptrend aligns with a simple fundamentals cue.', '{"timeframe": "daily"}'::jsonb, '{"universe_cap": 500, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('fundamental_tech_hybrid_v1', 1, 1, 'daily_ret', NULL, '{"underlying": "SPY", "window": 20}'::jsonb, 'technical_trend', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('fundamental_tech_hybrid_v1', 1, 2, 'volatility', NULL, '{"column": "close", "window": 20}'::jsonb, 'risk_context', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('fundamental_tech_hybrid_v1', 1, 3, 'momentum', NULL, '{"column": "close", "window": 50}'::jsonb, 'confirmation', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('gap_session_context_v1', 1, 'published', 'Gap + Session Context', 'Combine open gap size with first-15m session range and momentum gate.', ARRAY[]::text[], '"Combine open gap size with first-15m session range and momentum gate."'::jsonb, '{"signal_logic": "abs(open_gap_z)<2 AND first15m_range_z within [0.3,1.5] AND momentum>0", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Avoid extreme gaps.", "Skip illiquid opens.", "Wait for first 5–15 minutes to stabilize.", "Throttle scans to avoid overtrading."]'::jsonb, TRUE, 'Gate trades after the open using gap size, early session range, and momentum.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('gap_session_context_v1', 1, 1, 'open_gap_z', NULL, '{"ticker": "SPY", "atr_period": 14, "norm": "atr"}'::jsonb, 'gap', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('gap_session_context_v1', 1, 2, 'first15m_range_z', NULL, '{"ticker": "SPY", "window_mins": 15, "norm": "atr"}'::jsonb, 'session_vol', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('gap_session_context_v1', 1, 3, 'momentum', NULL, '{"column": "close", "window": 10}'::jsonb, 'momentum_gate', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('ichimoku_trend_gate_v1', 1, 'published', 'Ichimoku Trend Gate', 'Use cloud bias and Tenkan/Kijun cross as a trend gate.', ARRAY[]::text[], '"Use cloud bias and Tenkan/Kijun cross as a trend gate."'::jsonb, '{"signal_logic": "price above cloud AND tenkan>kijun => bullish context", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "hourly"}'::jsonb, NULL, '["Use cloud bias to avoid fighting trends.", "Wait for pullbacks when far from cloud.", "Check higher timeframe alignment.", "Avoid low-timeframe noise."]'::jsonb, TRUE, 'Trade in direction of Ichimoku cloud bias with Tenkan/Kijun cross.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('ichimoku_trend_gate_v1', 1, 1, 'ichimoku', NULL, NULL, 'cloud', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('keltner_channel_trend_v1', 1, 'published', 'Keltner Channel Trend', 'Use Keltner channel breaks and midline for trend-follow entries.', ARRAY[]::text[], '"Use Keltner channel breaks and midline for trend-follow entries."'::jsonb, '{"signal_logic": "close crosses channel upper AND close>ema20 => continuation (inverse for short)", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "hourly"}'::jsonb, NULL, '["Confirm direction with EMA.", "Use midline for pullbacks and stops.", "Avoid range-bound chop.", "Check volatility regime."]'::jsonb, TRUE, 'Trade channel breaks aligned with EMA trend; use midline as pullback level.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('keltner_channel_trend_v1', 1, 1, 'keltner', NULL, '{"window": 20, "mult": 2}'::jsonb, 'channel', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('keltner_channel_trend_v1', 1, 2, 'ema', NULL, '{"column": "close", "window": 20}'::jsonb, 'trend', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('macd_trend_pullback_v1', 1, 'published', 'MACD Trend Pullback', 'Trend confirm via MACD; enter on EMA pullback with volume support.', ARRAY[]::text[], '"Trend confirm via MACD; enter on EMA pullback with volume support."'::jsonb, '{"signal_logic": "macd up AND pullback to ema20 AND vol_z>0", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Require MACD up and a clean pullback to EMA.", "Use volume z-score to avoid weak pullbacks.", "Avoid thinly traded symbols.", "Take partials at prior high."]'::jsonb, TRUE, 'Uptrend by MACD; buy pullbacks to EMA20 with healthy volume.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('macd_trend_pullback_v1', 1, 1, 'macd', NULL, '{"fast": 12, "slow": 26, "signal": 9}'::jsonb, 'trend', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('macd_trend_pullback_v1', 1, 2, 'ema', NULL, '{"column": "close", "window": 20}'::jsonb, 'pullback_level', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('macd_trend_pullback_v1', 1, 3, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume_confirm', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('mean_reversion_bands_v1', 1, 'published', 'Mean Reversion Bands + Oscillator', 'Find fades from Bollinger bands with oscillator confirmation.', ARRAY[]::text[], '"Fade extremes at Bollinger bands when RSI is oversold/overbought and Stoch RSI turns."'::jsonb, '{"signal_logic": "(close <= bb_lower_20 AND rsi<30 AND stoch_rsi up) OR (close >= bb_upper_20 AND rsi>70 AND stoch_rsi down)", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["OHLC"], "timeframe": "hourly"}'::jsonb, NULL, '["Fade extremes at bands; avoid strong trends.", "Wait for Stoch RSI turn, not just RSI extreme.", "Take profits near mid-band to reduce whipsaw.", "Use hourly to reduce noise for beginners."]'::jsonb, TRUE, 'Find fades from Bollinger bands with oscillator confirmation.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('mean_reversion_bands_v1', 1, 1, 'bollinger_bands', NULL, '{"column": "close", "window": 20, "num_std": 2.0}'::jsonb, 'bands', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('mean_reversion_bands_v1', 1, 2, 'rsi', NULL, '{"period": 14}'::jsonb, 'oscillator', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('mean_reversion_bands_v1', 1, 3, 'stoch_rsi', NULL, '{"rsi_period": 14, "stoch_period": 14}'::jsonb, 'confirmation', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('momentum_breakout_v1', 1, 'published', 'Momentum Breakout Scanner', 'Find breakouts with trend and volume confirmation.', ARRAY[]::text[], '"Breakouts validated by momentum (MACD) and activity (volume/OBV)."'::jsonb, '{"signal_logic": "Donchian_high AND MACD_up AND vol_z > 2", "timeframe_alignment": "5m"}'::jsonb, NULL, '["Scanning during illiquid sessions.", "Chasing without stop/target rules."]'::jsonb, '{"inputs": ["OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Breakouts work best after consolidations.", "Use volume spike (Z > 2) as confirmation.", "MACD up helps avoid false breaks in chop.", "5m timeframe balances speed vs noise for most tickers."]'::jsonb, TRUE, 'Find breakouts confirmed by volume and trend. Use on 5m timeframe with a capped universe.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('momentum_breakout_v1', 1, 1, 'donchian', NULL, '{"window": 20}'::jsonb, 'range', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('momentum_breakout_v1', 1, 2, 'macd', NULL, '{"fast": 12, "slow": 26, "signal": 9}'::jsonb, 'trend', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('momentum_breakout_v1', 1, 3, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('momentum_breakout_v1', 1, 4, 'obv', NULL, NULL, 'confirmation', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('multi_tf_trend_v1', 1, 'published', 'Multi‑Timeframe Trend Alignment', 'Trade with alignment of daily and intraday trends.', ARRAY[]::text[], '"Use daily EMA to set bias, then intraday EMA and its slope to time entries."'::jsonb, '{"signal_logic": "daily_ema up AND close>ema20 AND ema_slope>0", "timeframe_alignment": "daily + hourly"}'::jsonb, NULL, NULL, '{"inputs": ["daily close", "hourly OHLC"], "timeframe": "daily+hourly"}'::jsonb, NULL, '["Trade with daily bias; avoid counter-trend entries.", "Wait for hourly EMA alignment and positive slope.", "Skip setups when HTF and LTF disagree.", "Re-evaluate after major daily shifts."]'::jsonb, TRUE, 'Trade with the higher timeframe: only act when hourly trend matches daily trend.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('multi_tf_trend_v1', 1, 1, 'daily_ema', NULL, '{"underlying": "SPY", "window": 20}'::jsonb, 'htf_trend', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('multi_tf_trend_v1', 1, 2, 'ema', NULL, '{"column": "close", "window": 20}'::jsonb, 'ltf_trend', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('multi_tf_trend_v1', 1, 3, 'ema_slope', NULL, '{"column": "close", "window": 20, "period": 1}'::jsonb, 'confirmation', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('options_premium_selector_v1', 1, 'published', 'Options Premium Strategy Selector', 'Choose between premium selling vs buying based on IV regime and momentum.', ARRAY[]::text[], '"High IV rank and contango slope favor premium selling; low IV rank and backwardation may favor buying."'::jsonb, '{"signal_logic": "if iv_rank>0.7 and slope>0 => sell premium; if iv_rank<0.3 and slope<0 and momentum up => buy", "timeframe_alignment": "daily"}'::jsonb, NULL, NULL, '{"inputs": ["IV time series", "daily OHLC"], "timeframe": "daily"}'::jsonb, NULL, '["High IV rank (>70%) generally favors selling premium.", "Low IV rank (<30%) can favor buying premium if momentum aligns.", "Term slope (contango) supports short vol; backwardation cautions.", "Avoid earnings/major events; IV regime shifts can invert signals."]'::jsonb, TRUE, 'High IV usually favors selling premium; low IV can favor buying if trend helps.', '{"timeframe": "daily"}'::jsonb, '{"universe_cap": 100, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('options_premium_selector_v1', 1, 1, 'iv_rank_52w', NULL, '{"underlying": "SPY", "window_days": 252}'::jsonb, 'iv_rank', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('options_premium_selector_v1', 1, 2, 'iv_term_slope', NULL, '{"underlying": "SPY", "days_fwd": 30, "iv_source": "snapshot"}'::jsonb, 'term_structure', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('options_premium_selector_v1', 1, 3, 'atm_iv_zscore', NULL, '{"underlying": "SPY", "window_days": 20}'::jsonb, 'iv_short_term', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('options_premium_selector_v1', 1, 4, 'momentum', NULL, '{"column": "close", "window": 50}'::jsonb, 'underlying_trend', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('regime_detection_v1', 1, 'published', 'Regime Detection Hierarchy', 'Label market regime (calm/trend/choppy) to gate or tilt downstream sets.', ARRAY[]::text[], '"Use VIX level and IV rank for volatility context and daily momentum for directional bias."'::jsonb, '{"signal_logic": "if VIX < 18 and momentum>0 => calm/trending; if VIX>25 => volatile", "timeframe_alignment": "daily"}'::jsonb, NULL, NULL, '{"inputs": ["daily OHLC", "VIX", "IV time series"], "timeframe": "daily"}'::jsonb, NULL, '["Use regime as a gate/tilt, not a direct entry signal.", "Update once daily to avoid noisy intraday flips.", "Combine VIX level with price momentum for context.", "Tighten risk and reduce size in volatile regimes."]'::jsonb, TRUE, 'Daily label for market regime (calm/trending vs volatile) to guide risk.', '{"timeframe": "daily"}'::jsonb, '{"universe_cap": 1, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('regime_detection_v1', 1, 1, 'vix_level', NULL, '{"index_ticker": "^VIX"}'::jsonb, 'vol_regime', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('regime_detection_v1', 1, 2, 'iv_rank_52w', NULL, '{"underlying": "SPY", "window_days": 252}'::jsonb, 'iv_regime', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('regime_detection_v1', 1, 3, 'momentum', NULL, '{"column": "close", "window": 50}'::jsonb, 'trend_bias', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('relative_strength_rotation_v1', 1, 'published', 'Relative Strength Rotation', 'Surface leaders by momentum and simple risk context for rotation.', ARRAY[]::text[], '"Surface leaders by momentum and simple risk context for rotation."'::jsonb, '{"signal_logic": "momentum strong vs peers; prefer calm VIX regimes", "timeframe_alignment": "daily"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "daily"}'::jsonb, NULL, '["Compare symbols within a universe.", "Avoid thinly traded names.", "Review regime context before rotating.", "Use daily timeframe for stability."]'::jsonb, TRUE, 'Find leaders by momentum (as a proxy for RS) with basic risk context.', '{"timeframe": "daily"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('relative_strength_rotation_v1', 1, 1, 'momentum', NULL, '{"column": "close", "window": 50}'::jsonb, 'rs_proxy', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('relative_strength_rotation_v1', 1, 2, 'vix_level', NULL, '{"index_ticker": "^VIX"}'::jsonb, 'risk_context', NULL, 'daily') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('rsi_stoch_confluence_v1', 1, 'published', 'RSI + StochRSI Confluence', 'Fade extremes only when RSI extreme aligns with a StochRSI turn.', ARRAY[]::text[], '"Fade extremes only when RSI extreme aligns with a StochRSI turn."'::jsonb, '{"signal_logic": "(rsi<30 AND stoch_rsi up) OR (rsi>70 AND stoch_rsi down)", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "hourly"}'::jsonb, NULL, '["Do not fade strong trends without additional context.", "Prefer hourly to reduce noise.", "Take profits near mean (e.g., EMA or band midline).", "Avoid news-driven spikes."]'::jsonb, TRUE, 'Use RSI extremes with a StochRSI cross to time reversals.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('rsi_stoch_confluence_v1', 1, 1, 'rsi', NULL, '{"period": 14}'::jsonb, 'oscillator', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('rsi_stoch_confluence_v1', 1, 2, 'stoch_rsi', NULL, '{"period": 14}'::jsonb, 'turn_signal', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('scalping_set_v1', 1, 'published', 'Scalping Set (Ultra‑Short TF)', 'Micro pullback entries with VWAP/EMA alignment and RSI confirmation.', ARRAY[]::text[], '"Favor quick pullbacks to VWAP/EMA with RSI re‑cross and adequate volume."'::jsonb, '{"signal_logic": "price near vwap or ema9 AND rsi7 recross AND vol_z not depressed", "timeframe_alignment": "1m"}'::jsonb, NULL, NULL, '{"inputs": ["1m OHLCV"], "timeframe": "1m"}'::jsonb, NULL, '["Trade only during liquid hours; avoid midday lulls.", "Favor pullbacks to VWAP/EMA with fast rejection.", "RSI re‑cross works better than fixed thresholds here.", "Keep stops tight; accept many small losses over few big ones."]'::jsonb, TRUE, 'Ultra-short entries near VWAP/EMA with quick RSI recross and volume support.', '{"timeframe": "1m"}'::jsonb, '{"universe_cap": 30, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('scalping_set_v1', 1, 1, 'intraday_vwap', NULL, '{"price_col": "close", "volume_col": "volume"}'::jsonb, 'vwap', NULL, '1m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('scalping_set_v1', 1, 2, 'rsi', NULL, '{"period": 7}'::jsonb, 'oscillator', NULL, '1m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('scalping_set_v1', 1, 3, 'ema', NULL, '{"column": "close", "window": 9}'::jsonb, 'trend', NULL, '1m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('scalping_set_v1', 1, 4, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume', NULL, '1m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('swing_risk_controls_v1', 1, 'published', 'Swing Set With Risk Controls', 'Swing entries with trend confirmation and ATR‑based risk controls.', ARRAY[]::text[], '"Use MACD and EMA for direction, bands for context, and ATR for stops/targets."'::jsonb, '{"signal_logic": "macd up AND close>ema50; use ATR multiples for brackets", "timeframe_alignment": "hourly"}'::jsonb, NULL, NULL, '{"inputs": ["hourly OHLC"], "timeframe": "hourly"}'::jsonb, NULL, '["Trade in direction of EMA/MACD; skip counter‑trend swings.", "Size stops/targets using ATR multiples (e.g., 1x/2x).", "Avoid entries at band extremes without confirmation.", "Check higher timeframe context before sizing up."]'::jsonb, TRUE, 'Swing entries with trend confirmation and ATR-based stops/targets.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('swing_risk_controls_v1', 1, 1, 'macd', NULL, '{"column": "close", "fast": 12, "slow": 26, "signal": 9}'::jsonb, 'trend_momentum', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('swing_risk_controls_v1', 1, 2, 'ema', NULL, '{"column": "close", "window": 50}'::jsonb, 'trend_filter', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('swing_risk_controls_v1', 1, 3, 'bollinger_bands', NULL, '{"column": "close", "window": 20, "num_std": 2.0}'::jsonb, 'context', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('swing_risk_controls_v1', 1, 4, 'atr', NULL, '{"period": 14}'::jsonb, 'risk', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('volatility_expansion_v1', 1, 'published', 'Volatility Expansion Regime', 'Detect shift into higher volatility regime for risk adjustments.', ARRAY[]::text[], '"ATR, realized volatility, and band width together flag volatility regime changes."'::jsonb, '{"signal_logic": "atr rising AND roll_std rising AND bb width expanding", "timeframe_alignment": "hourly|daily"}'::jsonb, NULL, NULL, '{"inputs": ["OHLC"], "timeframe": "hourly|daily"}'::jsonb, NULL, '["Rising ATR and band width suggest caution and smaller size.", "Prefer hourly/daily aggregation for regime detection.", "Confirm expansion with realized volatility, not one bar spikes.", "Widen stops or pause entries during sharp expansions."]'::jsonb, TRUE, 'Shows when volatility is expanding so you can reduce risk or avoid new entries.', '{"timeframe": "hourly"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('volatility_expansion_v1', 1, 1, 'atr', NULL, '{"period": 14}'::jsonb, 'vol', NULL, NULL) ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('volatility_expansion_v1', 1, 2, 'rolling_std', NULL, '{"column": "close", "window": 20}'::jsonb, 'vol', NULL, NULL) ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('volatility_expansion_v1', 1, 3, 'bollinger_bands', NULL, '{"column": "close", "window": 20, "num_std": 2.0}'::jsonb, 'band_width', NULL, NULL) ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('vpa_scanner_v1', 1, 'published', 'Volume Price Analysis (VPA) Scanner', 'Surface unusual volume moves relative to VWAP with OBV trend alignment.', ARRAY[]::text[], '"Unusual volume plus favorable distance to VWAP and OBV alignment highlights actionable moves."'::jsonb, '{"signal_logic": "vol_z>2 AND (|close-vwap|/vwap within bounds) AND obv slope aligned", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["5m OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Prioritize volume spikes with OBV trend support.", "Use VWAP distance bounds to avoid chasing extremes.", "Debounce repeated spikes in choppy sessions.", "Filter thinly traded symbols to reduce noise."]'::jsonb, TRUE, 'Highlights unusual volume moves near VWAP, aligned with OBV trend.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('vpa_scanner_v1', 1, 1, 'vol_zscore', NULL, '{"window": 20}'::jsonb, 'volume_spike', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('vpa_scanner_v1', 1, 2, 'close_vs_vwap', NULL, '{"kind": "pct"}'::jsonb, 'distance_vwap', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('vpa_scanner_v1', 1, 3, 'obv', NULL, NULL, 'flow_trend', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('vwap_distance_obv_v1', 1, 'published', 'VWAP Distance + OBV', 'Detect overextension vs VWAP with OBV flow confirmation.', ARRAY[]::text[], '"Detect overextension vs VWAP with OBV flow confirmation."'::jsonb, '{"signal_logic": "abs(close-vwap)/vwap > threshold AND obv slope aligned", "timeframe_alignment": "5m"}'::jsonb, NULL, NULL, '{"inputs": ["OHLCV"], "timeframe": "5m"}'::jsonb, NULL, '["Normalize distance by VWAP (pct).", "Align with OBV slope to confirm flow.", "Avoid chasing without pullbacks.", "Use liquid sessions."]'::jsonb, TRUE, 'Highlight stretched moves vs VWAP with OBV confirmation.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 200, "throttle_per_min": 2}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('vwap_distance_obv_v1', 1, 1, 'close_vs_vwap', NULL, '{"kind": "pct"}'::jsonb, 'distance_vwap', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('vwap_distance_obv_v1', 1, 2, 'obv', NULL, NULL, 'flow_trend', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_sets (set_id, version, status, title, purpose, tags, rationale, reading_guide, risk_notes, anti_patterns, data_requirements, performance_hints, assistant_hints, novice_ready, beginner_summary, simple_defaults, guardrails) VALUES ('zerosigma_0dte_gate', 1, 'published', '0DTE Intraday Gate', 'Enable options entries only under favorable intraday conditions.', ARRAY[]::text[], '"Avoid choppy or extreme opening regimes; use momentum and session metrics to greenlight entries."'::jsonb, '{"signal_logic": "momentum_score_total>0 AND first15m_range_z in [0.3,1.5] AND abs(open_gap_z)<2.0", "timeframe_alignment": "hourly + 5m"}'::jsonb, NULL, NULL, '{"inputs": ["intraday OHLC", "daily ATR"], "timeframe": "5m+hourly"}'::jsonb, NULL, '["Only trade when the gate is green; skip yellow/red.", "Avoid first 5–15m if range Z is extreme.", "Respect open gap filters; fading large gaps is risky.", "Use ATR brackets for predefined stops/targets."]'::jsonb, TRUE, 'Simple entry gate for 0DTE: trade only when conditions are favorable.', '{"timeframe": "5m"}'::jsonb, '{"universe_cap": 50, "throttle_per_min": 1}'::jsonb) ON CONFLICT (set_id, version) DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('zerosigma_0dte_gate', 1, 1, 'momentum_score_total', NULL, '{"w_hourly": 0.5, "w_daily": 0.5}'::jsonb, 'momentum', NULL, 'hourly') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('zerosigma_0dte_gate', 1, 2, 'first15m_range_z', NULL, '{"ticker": "SPY", "window_mins": 15, "norm": "atr"}'::jsonb, 'session_vol', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('zerosigma_0dte_gate', 1, 3, 'open_gap_z', NULL, '{"ticker": "SPY", "atr_period": 14, "norm": "atr"}'::jsonb, 'gap', NULL, '5m') ON CONFLICT DO NOTHING;
INSERT INTO sc.indicator_set_components (set_id, set_version, ord, indicator_id, indicator_version, params, role, weight, timeframe) VALUES ('zerosigma_0dte_gate', 1, 4, 'atr', NULL, '{"period": 14}'::jsonb, 'brackets', NULL, 'hourly') ON CONFLICT DO NOTHING;
COMMIT;
